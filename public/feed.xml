<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Bi's Blog</title>
        <link>localhost:3000</link>
        <description>个人博客，分享技术与生活</description>
        <lastBuildDate>Wed, 10 Sep 2025 09:38:19 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>Next.js</generator>
        <language>zh-CN</language>
        <image>
            <title>Bi's Blog</title>
            <url>localhost:3000/logo.png</url>
            <link>localhost:3000</link>
        </image>
        <copyright>All rights reserved 2025, Bi</copyright>
        <item>
            <title><![CDATA[Dokploy安装和部署项目流程]]></title>
            <link>localhost:3000/posts/Dokploy-install-deploy</link>
            <guid isPermaLink="false">localhost:3000/posts/Dokploy-install-deploy</guid>
            <pubDate>Wed, 10 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Dokploy 是一个免费的、自托管的平台. 使用Dokploy的原因: 自带 Traefik，自动处理域名解析、HTTPS 证书（Let’s Encrypt 自动续期..]]></description>
            <content:encoded><![CDATA[<h1>使用Dokploy的原因</h1>
<p>我之前用的都是传统的部署方式。通过Dockerfile进行部署然后使用Nginx做反向代理。SSL证书使用Let’s Encrypt 。每当上一个新项目这一套程序都得走一遍而且是纯手动配置执行。因为考虑到现在是初期尝试阶段，新项目的个数会有点多，再加上想把重心放在产品业务上，运维方面的事情就想通过自动化来完成。于是发现了Dokploy<font style="color:rgb(31, 35, 40);"> 是一个免费的、自托管的平台即服务 (PaaS)，可简化应用程序和数据库的部署和管理。</font></p>
<p>✅ 优点</p>
<ul>
<li>自带 <strong>Traefik</strong>，自动处理域名解析、HTTPS 证书（Let’s Encrypt 自动续期）。</li>
<li>Web UI 一键部署，不用自己写 nginx.conf。</li>
<li>内置 <strong>GitHub 自动部署</strong>，更新代码 = 自动重新构建/上线。</li>
<li>内置 <strong>数据库/存储管理</strong>，可以直接装 Postgres、MySQL、Redis。</li>
<li>多项目管理方便，日志可视化。</li>
</ul>
<h1>前置条件</h1>
<ol>
<li>一台Linux服务器.运行内存2GB RAM</li>
<li>Linux发行版(以下版本官方测试过，其他发行版不太确定是否能使用)</li>
</ol>
<ul>
<li><font style="color:rgb(62, 67, 66);">Ubuntu 24.04 LTS</font></li>
<li><font style="color:rgb(62, 67, 66);">Ubuntu 23.10</font></li>
<li><font style="color:rgb(62, 67, 66);">Ubuntu 22.04 LTS</font></li>
<li><font style="color:rgb(62, 67, 66);">Ubuntu 20.04 LTS</font></li>
<li><font style="color:rgb(62, 67, 66);">Ubuntu 18.04 LTS</font></li>
<li><font style="color:rgb(62, 67, 66);">Debian 12</font></li>
<li><font style="color:rgb(62, 67, 66);">Debian 11</font></li>
<li><font style="color:rgb(62, 67, 66);">Debian 10</font></li>
<li><font style="color:rgb(62, 67, 66);">Fedora 40</font></li>
<li><font style="color:rgb(62, 67, 66);">Centos 9</font></li>
<li><font style="color:rgb(62, 67, 66);">Centos 8</font></li>
</ul>
<h1>安装Dokploy</h1>
<p>Dokploy有两种使用模式：云版本，开源版本</p>
<p>使用云版本每个月会有一定的费用，而开源版本是完全免费的 收费模式如下图</p>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757491869182-ce73125a-2bcf-402d-9e7f-2053df9a0307.png" alt=""></p>
<p>本篇介绍的是在服务器上安装的开源版本</p>
<p>我的服务器的发行版是Debian 12 其他Linux发行版安装同理</p>
<p>安装使用官方提供的命令</p>
<pre class="language-bash"><code class="language-bash code-highlight"><span class="code-line"><span class="token function">curl</span> <span class="token parameter variable">-sSL</span> https://dokploy.com/install.sh <span class="token operator">|</span> <span class="token function">sh</span>
</span></code></pre>
<p>如果服务器上没有安装Docker 这条命令会自动帮你安装</p>
<p><font style="color:#DF2A3F;">注意: 需要确保服务器上的80、443、3000端口是空闲状态</font></p>
<p><font style="color:#DF2A3F;">我安装时因为服务器上有Nginx运行所以提示80端口被占用，把Nginx关掉就可以安装了</font></p>
<p>安装成功后可以通过 你的服务器公网<a href="http://IP:3000">http://IP:3000</a> 比如<a href="http://123:456:789:123:3000">http://123:456:789:123:3000</a><font style="color:#DF2A3F;">(需要设置服务器的3000端口开放才可以访问)</font></p>
<p><font style="color:#DF2A3F;"></font></p>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757491213684-e51efb9e-4474-44ed-840b-b66e00bf5c39.png" alt=""></p>
<p>进入图中页面可以注册你的账号密码</p>
<h1>部署第一个项目</h1>
<p>这里我使用NextJS项目为例来部署一个项目</p>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757492028891-985531bc-6967-47b9-a8e4-8e0e1bc103c5.png" alt=""></p>
<p>登录到主页面后可以看到Dokploy的控制台</p>
<h2>新建Project</h2>
<p>选择左侧菜单的Projects-> 点击右侧的Create Project</p>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757492233682-20797c34-f19f-4a27-a3dc-97b996059d8b.png" alt=""></p>
<p>输入项目名称和描述信息</p>
<p>点击Create</p>
<h2>新建Service</h2>
<p>点击进入刚刚创建的Project可以看到这个页面是Service服务页面</p>
<p>Service是Project下面的服务，可以理解成真正意义上你的单独的项目</p>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757492393834-2b13e187-4ad6-4a91-9a38-e6b0daaa39de.png" alt=""></p>
<p>点击右侧的Create Service -> 选择Application->填写你的项目名称等信息</p>
<h2>配置关联Git项目仓库</h2>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757492692905-68ab1515-9fb7-4ae4-ba01-c9b2d24e025d.png" alt=""></p>
<p>点击刚刚创建的Service会进入到如图所示的页面</p>
<ol>
<li>首先在General下看到Provider这一栏</li>
<li>选择你的仓库 我项目是放在Github上，所以选择Github</li>
<li>选择Github Account 如果是第一次Github会要求你授权登录，授权成功后可以选择你的账号</li>
<li>Repository仓库可以看到你Github上所有的项目，这时选择你需要部署的项目</li>
<li>下面的Branch 、Build Path等配置不变按照默认的来</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757493061897-e9fcd829-d6f6-4be6-a154-eb213127d026.png" alt=""></p>
<p>最后点击Save保存 记住一定得点一下，下一步配置Build时如果没保存会把刚刚的配置清空掉</p>
<h2>配置Build</h2>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757493174100-3fdc2a3b-be6b-46e6-84a4-e2483a3b7133.png" alt=""></p>
<p>页面接着往下滑会看到Build Type设置。</p>
<ol>
<li>Build Type选择 Dockerfile</li>
<li>下面Docker File 填写./Dockerfile</li>
</ol>
<p>项目中一定得有Dockerfile文件并且在最外层的根目录。Dockerfile文件在下面可以参考下。</p>
<p><font style="color:#DF2A3F;">我NextJS用的是pnpm构建的，所以Dockerfile中会有pnpm-lock.yaml的文件。如果构建时发现这个文件没有就是因为没有使用pnpm run build的原因，在本地执行一遍就好了</font></p>
<pre class="language-dockerfile"><code class="language-dockerfile code-highlight"><span class="code-line"><span class="token instruction"><span class="token keyword">FROM</span> node:22-alpine <span class="token keyword">AS</span> base</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token comment"># Install dependencies only when needed</span>
</span><span class="code-line"><span class="token instruction"><span class="token keyword">FROM</span> base <span class="token keyword">AS</span> deps</span>
</span><span class="code-line"><span class="token instruction"><span class="token keyword">RUN</span> apk add --no-cache libc6-compat &#x26;&#x26; yarn global add pnpm</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token comment"># Install dependencies based on the preferred package manager</span>
</span><span class="code-line"><span class="token instruction"><span class="token keyword">COPY</span> package.json pnpm-lock.yaml* ./</span>
</span><span class="code-line"><span class="token instruction"><span class="token keyword">RUN</span> pnpm i --frozen-lockfile</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token comment"># Rebuild the source code only when needed</span>
</span><span class="code-line"><span class="token instruction"><span class="token keyword">FROM</span> deps <span class="token keyword">AS</span> builder</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token comment"># Install dependencies based on the preferred package manager</span>
</span><span class="code-line"><span class="token instruction"><span class="token keyword">COPY</span> . .</span>
</span><span class="code-line"><span class="token instruction"><span class="token keyword">RUN</span> pnpm build</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token comment"># Production image, copy all the files and run next</span>
</span><span class="code-line"><span class="token instruction"><span class="token keyword">FROM</span> base <span class="token keyword">AS</span> runner</span>
</span><span class="code-line"><span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token instruction"><span class="token keyword">RUN</span> addgroup --system --gid 1001 nodejs &#x26;&#x26; <span class="token operator">\</span>
</span></span><span class="code-line"><span class="token instruction">    adduser --system --uid 1001 nextjs &#x26;&#x26; <span class="token operator">\</span>
</span></span><span class="code-line"><span class="token instruction">    mkdir .next &#x26;&#x26; <span class="token operator">\</span>
</span></span><span class="code-line"><span class="token instruction">    chown nextjs:nodejs .next</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">builder</span></span> /app/public ./public</span>
</span><span class="code-line"><span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">builder</span> <span class="token property">--chown</span><span class="token punctuation">=</span><span class="token string">nextjs:nodejs</span></span> /app/.next/standalone ./</span>
</span><span class="code-line"><span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">builder</span> <span class="token property">--chown</span><span class="token punctuation">=</span><span class="token string">nextjs:nodejs</span></span> /app/.next/static ./.next/static</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token instruction"><span class="token keyword">USER</span> nextjs</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token instruction"><span class="token keyword">EXPOSE</span> 3000</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token instruction"><span class="token keyword">ENV</span> NODE_ENV=production</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token instruction"><span class="token keyword">ENV</span> PORT=3000</span>
</span><span class="code-line"><span class="token instruction"><span class="token keyword">ENV</span> HOSTNAME=<span class="token string">"0.0.0.0"</span></span>
</span><span class="code-line">
</span><span class="code-line"><span class="token comment"># server.js is created by next build from the standalone output</span>
</span><span class="code-line"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"node"</span>, <span class="token string">"server.js"</span>]</span>
</span></code></pre>
<p>最后点击save保存</p>
<h2>设置环境变量</h2>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757493604873-0b8ff1f8-919f-4e51-bbe9-cc9ef7e5eeb8.png" alt=""></p>
<p>点击菜单上面的Environment可以看到如上图的页面</p>
<p>在Environment Settings 这一栏点开右边的眼睛图标就可以添加你项目中的.env配置文件</p>
<p>最后点击最下面的Save保存</p>
<h2>部署</h2>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757493836315-8d927632-47a3-4900-85e8-ba9ab9705ebc.png" alt=""></p>
<p>回到General菜单，点击Deploy部署按钮即可</p>
<p>这时选择Deployments菜单可以看到部署时的情况日志</p>
<p>当部署成功之后点击最右侧的Logs菜单查看项目的日志</p>
<h1>给项目添加域名</h1>
<h2>配置DNS</h2>
<p>这里我以cloudflare为例</p>
<p>把域名指向你服务器的公网IP</p>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757494396551-d01272f7-f518-408d-b526-86bbdf5e31c9.png" alt=""></p>
<p>Type: A</p>
<p>name:域名.com</p>
<p>conent: 服务器的公网IP</p>
<p>如果需要配置www前缀 可以参考CNAME那一栏的配置</p>
<h2>配置域名和SSL证书</h2>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757493997311-75daa751-d17d-49a6-b660-34d5d7274b58.png" alt=""></p>
<p>选择Domains这栏->点击Add Domain</p>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757494054323-6449c70f-e2fa-4bf6-9c6c-176b150f80de.png" alt=""></p>
<p>可以参考我的配置，把Host换成你的域名</p>
<p>Container Port是Dockerfile里写的容器内端口，这里我是3000</p>
<p>配置完成后通过域名就可以访问到你当前的项目了</p>
<h2>www前缀域名转发到一级主域名</h2>
<p>我所使用的版本Dokploy 0.25.1目前没有找到可视化的配置方法。有人说在左侧菜单Traefik File System中可以配置，这个我没有试过 主要对Traefik不太熟悉</p>
<p>目前的办法是通过Cloudflare进行转发</p>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757494937335-50f5b867-6a75-4f0d-aa22-cf2e2cb23932.png" alt=""></p>
<p>Cloudflare左侧菜单 Rules->Page Rules->点击Create Page Rule</p>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757494986158-1f9e25ef-9ef0-4e98-ba98-7f7353ae59af.png" alt=""></p>
<p>具体配置可以参考我的配置，把域名换成你自己的即可</p>
<p>目前为止项目配置到此结束，通过域名和www域名转发到主域名都可以访问了！</p>
<h1>给Dokploy添加域名(可选)</h1>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/2709171/1757495171453-4fefa141-d696-4e1a-b254-00b08c6d6c23.png" alt=""></p>
<p><font style="color:#DF2A3F;">配置之前记得设置DNS把域名映射到服务器的IP上，和上面4.1配置DNS步骤一样</font></p>
<p>如果想通过域名访问dokploy页面可以点击菜单左侧Web Server</p>
<p>Domain输入你的未使用域名(二级域名也可以)</p>
<p>Let's Encrypt Email 填写你的邮箱 开启Https点击Save</p>
<p>接下来便可以通过域名访问dokploy页面了，3000端口也可以不同对外开放了～</p>
<p>好了，本期教程到此结束。<font style="color:rgb(37, 41, 51);">如果有任何疑问可以通过邮箱联系我 更多精彩内容可以关注我的博客 </font></p>]]></content:encoded>
            <author>zx88cvb@gmail.com (Bi)</author>
            <category>Dokploy</category>
            <category>前端开发</category>
            <category>部署</category>
        </item>
        <item>
            <title><![CDATA[包含多个子项目集成一个项目部署Vercel方法]]></title>
            <link>localhost:3000/posts/vercel-deploy-multiple-project</link>
            <guid isPermaLink="false">localhost:3000/posts/vercel-deploy-multiple-project</guid>
            <pubDate>Fri, 22 Aug 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[一个项目中包含多个子项目,子项目用到的框架不同.例如projectA用的React,Project B用的Vue, Project C用的原生HTML+CSS+JS。如何将多个项目合并成一个配置并且部署到Vercel..]]></description>
            <content:encoded><![CDATA[<h1>1. 起因</h1>
<p>因为手上有一个项目集合需要通过: 域名/项目名称 访问。但每个项目用到的框架各不相同。最简单的办法是通过nginx配置反向代理来实现，奈何没有多余的服务器。所以就想部署到Vercel上。本来是想每个项目在Vercel单独部署,因为每个项目都是一个小模块功能不多，单独起一个项目有点浪费就打算合成一个项目通过域名+项目名的方式来部署。于是查了查资料发现还真可以。下面就来带大家第一实践一下。</p>
<h1>2. 项目结构</h1>
<pre class="language-txt"><code class="language-txt code-highlight"><span class="code-line">project-list/
</span><span class="code-line">├── vercel.json
</span><span class="code-line">├── project-A/   # React/Next.js 项目
</span><span class="code-line">├── project-B/   # Vue 项目
</span><span class="code-line">├── project-C/   # Astro 项目
</span><span class="code-line">└── project-D/   # 纯 HTML 静态项目
</span></code></pre>
<h2>2.1 project-A项目下的package.json</h2>
<pre class="language-json"><code class="language-json code-highlight"><span class="code-line"><span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"project-A"</span><span class="token punctuation">,</span>
</span><span class="code-line">  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token property">"dev"</span><span class="token operator">:</span> <span class="token string">"next dev"</span><span class="token punctuation">,</span>
</span><span class="code-line">    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"next build"</span><span class="token punctuation">,</span>
</span><span class="code-line">    <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"next start"</span>
</span><span class="code-line">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</span><span class="code-line">  <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token property">"next"</span><span class="token operator">:</span> <span class="token string">"14.0.0"</span><span class="token punctuation">,</span>
</span><span class="code-line">    <span class="token property">"react"</span><span class="token operator">:</span> <span class="token string">"18.2.0"</span><span class="token punctuation">,</span>
</span><span class="code-line">    <span class="token property">"react-dom"</span><span class="token operator">:</span> <span class="token string">"18.2.0"</span>
</span><span class="code-line">  <span class="token punctuation">}</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<p>Vercel 自动识别 @vercel/next，会跑 npm run build，输出 .next/。</p>
<h2>2.2 project-B项目下的package.json</h2>
<pre class="language-json"><code class="language-json code-highlight"><span class="code-line"><span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"project-B"</span><span class="token punctuation">,</span>
</span><span class="code-line">  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token property">"dev"</span><span class="token operator">:</span> <span class="token string">"vite"</span><span class="token punctuation">,</span>
</span><span class="code-line">    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"vite build"</span><span class="token punctuation">,</span>
</span><span class="code-line">    <span class="token property">"preview"</span><span class="token operator">:</span> <span class="token string">"vite preview"</span>
</span><span class="code-line">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</span><span class="code-line">  <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token property">"vue"</span><span class="token operator">:</span> <span class="token string">"^3.4.0"</span><span class="token punctuation">,</span>
</span><span class="code-line">    <span class="token property">"vite"</span><span class="token operator">:</span> <span class="token string">"^5.0.0"</span>
</span><span class="code-line">  <span class="token punctuation">}</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<p>Vite 默认打包目录 dist/</p>
<h2>2.3 project-C项目下的package.json</h2>
<pre class="language-json"><code class="language-json code-highlight"><span class="code-line"><span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"project-C"</span><span class="token punctuation">,</span>
</span><span class="code-line">  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token property">"dev"</span><span class="token operator">:</span> <span class="token string">"astro dev"</span><span class="token punctuation">,</span>
</span><span class="code-line">    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"astro build"</span><span class="token punctuation">,</span>
</span><span class="code-line">    <span class="token property">"preview"</span><span class="token operator">:</span> <span class="token string">"astro preview"</span>
</span><span class="code-line">  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</span><span class="code-line">  <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token property">"astro"</span><span class="token operator">:</span> <span class="token string">"^4.0.0"</span>
</span><span class="code-line">  <span class="token punctuation">}</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<p>Astro 也会输出 dist/</p>
<h2>2.4 project-D 纯HTML+CSS+JS</h2>
<pre class="language-json"><code class="language-json code-highlight"><span class="code-line">project-D/
</span><span class="code-line"> ├── index.html
</span><span class="code-line"> ├── style.css
</span><span class="code-line"> ├── script.js
</span><span class="code-line"> └── images/
</span></code></pre>
<p>Vercel 直接托管，不需要 build。</p>
<h1>3. vercel.json创建和配置</h1>
<p>在父项目project-list下创建vercel.json
下面是vercel.json的具体配置</p>
<pre class="language-json"><code class="language-json code-highlight"><span class="code-line"><span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
</span><span class="code-line">    <span class="token property">"builds"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
</span><span class="code-line">      <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"project-A/package.json"</span><span class="token punctuation">,</span>
</span><span class="code-line">        <span class="token property">"use"</span><span class="token operator">:</span> <span class="token string">"@vercel/next"</span>
</span><span class="code-line">      <span class="token punctuation">}</span><span class="token punctuation">,</span>
</span><span class="code-line">      <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"project-B/package.json"</span><span class="token punctuation">,</span>
</span><span class="code-line">        <span class="token property">"use"</span><span class="token operator">:</span> <span class="token string">"@vercel/static-build"</span><span class="token punctuation">,</span>
</span><span class="code-line">        <span class="token property">"config"</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">"distDir"</span><span class="token operator">:</span> <span class="token string">"dist"</span> <span class="token punctuation">}</span>
</span><span class="code-line">      <span class="token punctuation">}</span><span class="token punctuation">,</span>
</span><span class="code-line">      <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"project-C/package.json"</span><span class="token punctuation">,</span>
</span><span class="code-line">        <span class="token property">"use"</span><span class="token operator">:</span> <span class="token string">"@vercel/static-build"</span><span class="token punctuation">,</span>
</span><span class="code-line">        <span class="token property">"config"</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">"distDir"</span><span class="token operator">:</span> <span class="token string">"dist"</span> <span class="token punctuation">}</span>
</span><span class="code-line">      <span class="token punctuation">}</span><span class="token punctuation">,</span>
</span><span class="code-line">      <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"project-D/**/*"</span><span class="token punctuation">,</span>
</span><span class="code-line">        <span class="token property">"use"</span><span class="token operator">:</span> <span class="token string">"@vercel/static"</span>
</span><span class="code-line">      <span class="token punctuation">}</span>
</span><span class="code-line">    <span class="token punctuation">]</span><span class="token punctuation">,</span>
</span><span class="code-line">    <span class="token property">"rewrites"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
</span><span class="code-line">      <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token property">"source"</span><span class="token operator">:</span> <span class="token string">"/project-A/(.*)"</span><span class="token punctuation">,</span>
</span><span class="code-line">        <span class="token property">"destination"</span><span class="token operator">:</span> <span class="token string">"/project-A/$1"</span>
</span><span class="code-line">      <span class="token punctuation">}</span><span class="token punctuation">,</span>
</span><span class="code-line">      <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token property">"source"</span><span class="token operator">:</span> <span class="token string">"/project-B/(.*)"</span><span class="token punctuation">,</span>
</span><span class="code-line">        <span class="token property">"destination"</span><span class="token operator">:</span> <span class="token string">"/project-B/$1"</span>
</span><span class="code-line">      <span class="token punctuation">}</span><span class="token punctuation">,</span>
</span><span class="code-line">      <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token property">"source"</span><span class="token operator">:</span> <span class="token string">"/project-C/(.*)"</span><span class="token punctuation">,</span>
</span><span class="code-line">        <span class="token property">"destination"</span><span class="token operator">:</span> <span class="token string">"/project-C/$1"</span>
</span><span class="code-line">      <span class="token punctuation">}</span><span class="token punctuation">,</span>
</span><span class="code-line">      <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token property">"source"</span><span class="token operator">:</span> <span class="token string">"/project-D/(.*)"</span><span class="token punctuation">,</span>
</span><span class="code-line">        <span class="token property">"destination"</span><span class="token operator">:</span> <span class="token string">"/project-D/$1"</span>
</span><span class="code-line">      <span class="token punctuation">}</span>
</span><span class="code-line">    <span class="token punctuation">]</span>
</span><span class="code-line">  <span class="token punctuation">}</span>
</span></code></pre>
<p>针对不同项目,builds里面的写法不同. 当然具体情况得看自己的项目结构，即便是其他的框架也可以照葫芦画瓢的在builds里面配置。</p>
<h1>4. 提交并部署</h1>
<p>现在可以直接将父项目源码上传到Git,Vercel通过vercel.json会识别到各个项目的build设置。后续部署全程由Vercel来自动完成(第一次操作记得在Vercel中关联到Git里面的project-list父项目,后续代码有提交都会自动部署)</p>
<p>部署完成后通过 域名/项目名/index.html 来试着访问一下你的项目吧!</p>
<p>好了,以上就是Vercel部署多个项目合集的方法.如果有任何疑问可以通过邮箱联系我</p>]]></content:encoded>
            <author>zx88cvb@gmail.com (Bi)</author>
            <category>Vercel</category>
            <category>前端开发</category>
            <category>部署</category>
        </item>
        <item>
            <title><![CDATA[NextJS接入Google Analytics方法]]></title>
            <link>localhost:3000/posts/using-google-analytics-with-next.js</link>
            <guid isPermaLink="false">localhost:3000/posts/using-google-analytics-with-next.js</guid>
            <pubDate>Wed, 20 Aug 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[NextJS接入Google Analytics方法,首先安装@next/third-parties 执行 npm install @next/third-parties]]></description>
            <content:encoded><![CDATA[<h1>1. 安装 npm install @next/third-parties</h1>
<p>执行npm安装命令</p>
<pre class="language-bash"><code class="language-bash code-highlight"><span class="code-line">    <span class="token function">npm</span> <span class="token function">install</span> @next/third-parties
</span></code></pre>
<h1>2. 引入GoogleAnalytics组件</h1>
<p>一般在app下的layout.tsx中引入</p>
<pre class="language-ts"><code class="language-ts code-highlight"><span class="code-line"><span class="token keyword">import</span> <span class="token punctuation">{</span> GoogleAnalytics <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@next/third-parties/google'</span><span class="token punctuation">;</span>
</span></code></pre>
<p>加入GoogleAnalytics代码并且控制只在生产环境使用</p>
<pre class="language-ts"><code class="language-ts code-highlight"><span class="code-line"><span class="token comment">// 仅在生产环境启用GoogleAnalytics</span>
</span><span class="code-line">    <span class="token keyword">const</span> <span class="token constant">GA_ENABLED</span> <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">'production'</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token keyword">return</span> <span class="token punctuation">(</span>
</span><span class="code-line">      <span class="token operator">&#x3C;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span>
</span><span class="code-line">        <span class="token operator">&#x3C;</span>body<span class="token operator">></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&#x3C;</span><span class="token operator">/</span>body<span class="token operator">></span>
</span><span class="code-line">        <span class="token punctuation">{</span><span class="token comment">/* Google Analytics - 仅在生产环境启用 */</span><span class="token punctuation">}</span>
</span><span class="code-line">        <span class="token punctuation">{</span><span class="token constant">GA_ENABLED</span> <span class="token operator">&#x26;&#x26;</span> <span class="token operator">&#x3C;</span>GoogleAnalytics gaId<span class="token operator">=</span><span class="token string">"your gaID"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">}</span>
</span><span class="code-line">      <span class="token operator">&#x3C;</span><span class="token operator">/</span>html<span class="token operator">></span>
</span><span class="code-line">    <span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre>
<h1>3. 检查接入是否成功</h1>
<h2>3.1. 通过F12查看</h2>
<p>项目部署到生产环境后进去页面，通过F12查看</p>
<p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/304e336682e14e589be66642a709585a~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgQmk=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiODUyODc2NzU2Mjc0NzQ5In0%3D&#x26;rk3s=f64ab15b&#x26;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&#x26;x-orig-expires=1756259038&#x26;x-orig-sign=l5w3Nzxj74yOG6VXTOJwLevgRdM%3D" alt=""></p>
<p>如果有图中的代码则表示Google Analytics代码已经成功加入到项目中，一般这段代码会在最末尾</p>
<h2>3.2. 登录Google Analytics查看是否有访问数据</h2>
<p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/0c94c13591f64f51929df7f57fd01cf0~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgQmk=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiODUyODc2NzU2Mjc0NzQ5In0%3D&#x26;rk3s=f64ab15b&#x26;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&#x26;x-orig-expires=1756259038&#x26;x-orig-sign=bCZU04mEmRaFrLyR1gDNN1R%2BFTw%3D" alt=""></p>
<p>如图所示,刚刚访问过后会在<strong>过去 30 分钟的活跃用户数</strong> 中显示数据</p>
<p>也可以通过左侧菜单的实时概览进行查看</p>
<p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/30fb6b9f0cfa40739352a8398a004a96~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgQmk=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiODUyODc2NzU2Mjc0NzQ5In0%3D&#x26;rk3s=f64ab15b&#x26;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&#x26;x-orig-expires=1756259038&#x26;x-orig-sign=ZHC9CM5dZXMH2LVWeYuKDCOcQ8E%3D" alt=""></p>
<p>好了,以上就是NextJS接入Google Analytics接入的全过程，希望对你有所帮助</p>]]></content:encoded>
            <author>zx88cvb@gmail.com (Bi)</author>
            <category>Next.js</category>
            <category>前端开发</category>
            <category>Google Analytics</category>
        </item>
        <item>
            <title><![CDATA[America is back]]></title>
            <link>localhost:3000/posts/America-is-back</link>
            <guid isPermaLink="false">localhost:3000/posts/America-is-back</guid>
            <pubDate>Fri, 08 Aug 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[America is back, Baby!!]]></description>
            <content:encoded><![CDATA[<h2>视频</h2>
<p><video src="https://dhuqkmqv7zzml403.public.blob.vercel-storage.com/video/blog/pGIaYlcj0ES0ZkWT.mp4" controls class="w-full h-[500px]"></video></p>]]></content:encoded>
            <author>zx88cvb@gmail.com (Bi)</author>
            <category>America</category>
            <category>视频</category>
        </item>
        <item>
            <title><![CDATA[Spring AI使用ollamaModel和qwen3兼容问题because evalDuration is null错误解决]]></title>
            <link>localhost:3000/posts/SpringAI-ollama-qwen3-error</link>
            <guid isPermaLink="false">localhost:3000/posts/SpringAI-ollama-qwen3-error</guid>
            <pubDate>Fri, 01 Aug 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Spring AI使用ollamaModel和qwen3兼容问题because evalDuration is null错误解决详细办法]]></description>
            <content:encoded><![CDATA[<h3>问题描述</h3>
<p><strong>JDK版本: 17</strong>
<strong>Spring AI版本: 1.0.0</strong>
<strong>库: OllamaChatModel</strong>
<strong>模型:qwen3</strong>
<strong>使用maven库</strong></p>
<pre class="language-xml"><code class="language-xml code-highlight"><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>dependency</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>groupId</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>artifactId</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>dependency</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>dependency</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.ai<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>groupId</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>artifactId</span><span class="token punctuation">></span></span>spring-ai-starter-model-ollama<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>artifactId</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>dependency</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>dependency</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>groupId</span><span class="token punctuation">></span></span>com.mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>groupId</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-j<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>artifactId</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>scope</span><span class="token punctuation">></span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>scope</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>dependency</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>dependency</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>groupId</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>artifactId</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>scope</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>dependency</span><span class="token punctuation">></span></span>
</span><span class="code-line">
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>dependency</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>groupId</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>artifactId</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>version</span><span class="token punctuation">></span></span>1.18.30<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>version</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>dependency</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>dependency</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>groupId</span><span class="token punctuation">></span></span>com.google.guava<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>groupId</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>artifactId</span><span class="token punctuation">></span></span>guava<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>artifactId</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>version</span><span class="token punctuation">></span></span>33.0.0-jre<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>version</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>dependency</span><span class="token punctuation">></span></span>
</span><span class="code-line">
</span><span class="code-line"><span class="token comment">&#x3C;!-- https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-spring-boot3-starter --></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>dependency</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>groupId</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-plus-spring-boot3-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>artifactId</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>version</span><span class="token punctuation">></span></span>3.5.12<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>version</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>dependency</span><span class="token punctuation">></span></span>
</span></code></pre>
<p>使用Spring AI框架调用OllamaChatModel方法时配置qwen3模型时会出现Cannot invoke "java.time.Duration.plus(java.time.Duration)" because "evalDuration" is null 错误。错误原因是OllamaChatModel源码中的判断问题。官方将在1.0.x后续版本中解决。那么下面将在1.0版本中手动解决该问题</p>
<p>参考官方回复:<a href="https://github.com/spring-projects/spring-ai/issues/3369">https://github.com/spring-projects/spring-ai/issues/3369</a>
<a href="https://github.com/spring-projects/spring-ai/pull/3372">https://github.com/spring-projects/spring-ai/pull/3372</a></p>
<p>出现问题的源码如下图
<img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/4ca8551f7eea4044bec067f783246d5c~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgQmk=:q75.awebp?rk3s=f64ab15b&#x26;x-expires=1756698583&#x26;x-signature=%2Bgs2GMjVUqCFCPHChP6CW6yXS3s%3D" alt=""></p>
<h3>解决方法</h3>
<p>这个时候我们要重写OllamaChatModel，重写的方式就是新建一个OllamaAlibabaChatModel类。如下代码</p>
<pre class="language-java"><code class="language-java code-highlight"><span class="code-line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>bi<span class="token punctuation">.</span>demoai<span class="token punctuation">.</span>model</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>core<span class="token punctuation">.</span>type<span class="token punctuation">.</span></span><span class="token class-name">TypeReference</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>micrometer<span class="token punctuation">.</span>observation<span class="token punctuation">.</span></span><span class="token class-name">Observation</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>micrometer<span class="token punctuation">.</span>observation<span class="token punctuation">.</span></span><span class="token class-name">ObservationRegistry</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>micrometer<span class="token punctuation">.</span>observation<span class="token punctuation">.</span>contextpropagation<span class="token punctuation">.</span></span><span class="token class-name">ObservationThreadLocalAccessor</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">LoggerFactory</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>messages<span class="token punctuation">.</span></span><span class="token class-name">AssistantMessage</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>messages<span class="token punctuation">.</span></span><span class="token class-name">SystemMessage</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>messages<span class="token punctuation">.</span></span><span class="token class-name">ToolResponseMessage</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>messages<span class="token punctuation">.</span></span><span class="token class-name">UserMessage</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span></span><span class="token class-name">ChatGenerationMetadata</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span></span><span class="token class-name">ChatResponseMetadata</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span></span><span class="token class-name">DefaultUsage</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">ChatModel</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">ChatResponse</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Generation</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">MessageAggregator</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>observation<span class="token punctuation">.</span></span><span class="token class-name">ChatModelObservationContext</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>observation<span class="token punctuation">.</span></span><span class="token class-name">ChatModelObservationConvention</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>observation<span class="token punctuation">.</span></span><span class="token class-name">ChatModelObservationDocumentation</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>observation<span class="token punctuation">.</span></span><span class="token class-name">DefaultChatModelObservationConvention</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>prompt<span class="token punctuation">.</span></span><span class="token class-name">ChatOptions</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>prompt<span class="token punctuation">.</span></span><span class="token class-name">Prompt</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">ModelOptionsUtils</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>model<span class="token punctuation">.</span>tool<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>ollama<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">OllamaApi</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>ollama<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">OllamaModel</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>ollama<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">OllamaOptions</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>ollama<span class="token punctuation">.</span>api<span class="token punctuation">.</span>common<span class="token punctuation">.</span></span><span class="token class-name">OllamaApiConstants</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>ollama<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">ModelManagementOptions</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>ollama<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">OllamaModelManager</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>ollama<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">PullModelStrategy</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>tool<span class="token punctuation">.</span>definition<span class="token punctuation">.</span></span><span class="token class-name">ToolDefinition</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>util<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JsonParser</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Assert</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">CollectionUtils</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">reactor<span class="token punctuation">.</span>core<span class="token punctuation">.</span>publisher<span class="token punctuation">.</span></span><span class="token class-name">Flux</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">reactor<span class="token punctuation">.</span>core<span class="token punctuation">.</span>scheduler<span class="token punctuation">.</span></span><span class="token class-name">Schedulers</span></span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">Duration</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Optional</span></span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token doc-comment comment">/**
</span></span><span class="code-line"><span class="token doc-comment comment"> * <span class="token keyword">@author</span>: Bi
</span></span><span class="code-line"><span class="token doc-comment comment"> * <span class="token keyword">@date</span>: 2025/6/2
</span></span><span class="code-line"><span class="token doc-comment comment"> */</span>
</span><span class="code-line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OllamaAlibabaChatModel</span> <span class="token keyword">implements</span> <span class="token class-name">ChatModel</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">OllamaAlibabaChatModel</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">DONE</span> <span class="token operator">=</span> <span class="token string">"done"</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">METADATA_PROMPT_EVAL_COUNT</span> <span class="token operator">=</span> <span class="token string">"prompt-eval-count"</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">METADATA_EVAL_COUNT</span> <span class="token operator">=</span> <span class="token string">"eval-count"</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">METADATA_CREATED_AT</span> <span class="token operator">=</span> <span class="token string">"created-at"</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">METADATA_TOTAL_DURATION</span> <span class="token operator">=</span> <span class="token string">"total-duration"</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">METADATA_LOAD_DURATION</span> <span class="token operator">=</span> <span class="token string">"load-duration"</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">METADATA_PROMPT_EVAL_DURATION</span> <span class="token operator">=</span> <span class="token string">"prompt-eval-duration"</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">METADATA_EVAL_DURATION</span> <span class="token operator">=</span> <span class="token string">"eval-duration"</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ChatModelObservationConvention</span> <span class="token constant">DEFAULT_OBSERVATION_CONVENTION</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultChatModelObservationConvention</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ToolCallingManager</span> <span class="token constant">DEFAULT_TOOL_CALLING_MANAGER</span> <span class="token operator">=</span> <span class="token class-name">ToolCallingManager</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">OllamaApi</span> chatApi<span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">OllamaOptions</span> defaultOptions<span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ObservationRegistry</span> observationRegistry<span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">OllamaModelManager</span> modelManager<span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ToolCallingManager</span> toolCallingManager<span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token doc-comment comment">/**
</span></span><span class="code-line"><span class="token doc-comment comment">     * The tool execution eligibility predicate used to determine if a tool can be
</span></span><span class="code-line"><span class="token doc-comment comment">     * executed.
</span></span><span class="code-line"><span class="token doc-comment comment">     */</span>
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ToolExecutionEligibilityPredicate</span> toolExecutionEligibilityPredicate<span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token class-name">ChatModelObservationConvention</span> observationConvention <span class="token operator">=</span> <span class="token constant">DEFAULT_OBSERVATION_CONVENTION</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">public</span> <span class="token class-name">OllamaAlibabaChatModel</span><span class="token punctuation">(</span><span class="token class-name">OllamaApi</span> ollamaApi<span class="token punctuation">,</span> <span class="token class-name">OllamaOptions</span> defaultOptions<span class="token punctuation">,</span> <span class="token class-name">ToolCallingManager</span> toolCallingManager<span class="token punctuation">,</span>
</span><span class="code-line">                           <span class="token class-name">ObservationRegistry</span> observationRegistry<span class="token punctuation">,</span> <span class="token class-name">ModelManagementOptions</span> modelManagementOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token keyword">this</span><span class="token punctuation">(</span>ollamaApi<span class="token punctuation">,</span> defaultOptions<span class="token punctuation">,</span> toolCallingManager<span class="token punctuation">,</span> observationRegistry<span class="token punctuation">,</span> modelManagementOptions<span class="token punctuation">,</span>
</span><span class="code-line">                <span class="token keyword">new</span> <span class="token class-name">DefaultToolExecutionEligibilityPredicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">public</span> <span class="token class-name">OllamaAlibabaChatModel</span><span class="token punctuation">(</span><span class="token class-name">OllamaApi</span> ollamaApi<span class="token punctuation">,</span> <span class="token class-name">OllamaOptions</span> defaultOptions<span class="token punctuation">,</span> <span class="token class-name">ToolCallingManager</span> toolCallingManager<span class="token punctuation">,</span>
</span><span class="code-line">                           <span class="token class-name">ObservationRegistry</span> observationRegistry<span class="token punctuation">,</span> <span class="token class-name">ModelManagementOptions</span> modelManagementOptions<span class="token punctuation">,</span>
</span><span class="code-line">                           <span class="token class-name">ToolExecutionEligibilityPredicate</span> toolExecutionEligibilityPredicate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>ollamaApi<span class="token punctuation">,</span> <span class="token string">"ollamaApi must not be null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>defaultOptions<span class="token punctuation">,</span> <span class="token string">"defaultOptions must not be null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>toolCallingManager<span class="token punctuation">,</span> <span class="token string">"toolCallingManager must not be null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>observationRegistry<span class="token punctuation">,</span> <span class="token string">"observationRegistry must not be null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>modelManagementOptions<span class="token punctuation">,</span> <span class="token string">"modelManagementOptions must not be null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>toolExecutionEligibilityPredicate<span class="token punctuation">,</span> <span class="token string">"toolExecutionEligibilityPredicate must not be null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token keyword">this</span><span class="token punctuation">.</span>chatApi <span class="token operator">=</span> ollamaApi<span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions <span class="token operator">=</span> defaultOptions<span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token keyword">this</span><span class="token punctuation">.</span>toolCallingManager <span class="token operator">=</span> toolCallingManager<span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token keyword">this</span><span class="token punctuation">.</span>observationRegistry <span class="token operator">=</span> observationRegistry<span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token keyword">this</span><span class="token punctuation">.</span>modelManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OllamaModelManager</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>chatApi<span class="token punctuation">,</span> modelManagementOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token keyword">this</span><span class="token punctuation">.</span>toolExecutionEligibilityPredicate <span class="token operator">=</span> toolExecutionEligibilityPredicate<span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token function">initializeModel</span><span class="token punctuation">(</span>defaultOptions<span class="token punctuation">.</span><span class="token function">getModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> modelManagementOptions<span class="token punctuation">.</span><span class="token function">pullModelStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">OllamaAlibabaChatModel<span class="token punctuation">.</span>Builder</span> <span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OllamaAlibabaChatModel<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">static</span> <span class="token class-name">ChatResponseMetadata</span> <span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name">OllamaApi<span class="token punctuation">.</span>ChatResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">ChatResponse</span> previousChatResponse<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> <span class="token string">"OllamaApi.ChatResponse must not be null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token class-name">DefaultUsage</span> newUsage <span class="token operator">=</span> <span class="token function">getDefaultUsage</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token class-name">Integer</span> promptTokens <span class="token operator">=</span> newUsage<span class="token punctuation">.</span><span class="token function">getPromptTokens</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token class-name">Integer</span> generationTokens <span class="token operator">=</span> newUsage<span class="token punctuation">.</span><span class="token function">getCompletionTokens</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token keyword">int</span> totalTokens <span class="token operator">=</span> newUsage<span class="token punctuation">.</span><span class="token function">getTotalTokens</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token class-name">Duration</span> evalDuration <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getEvalDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token class-name">Duration</span> promptEvalDuration <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getPromptEvalDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token class-name">Duration</span> loadDuration <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getLoadDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token class-name">Duration</span> totalDuration <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getTotalDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>previousChatResponse <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&#x26;&#x26;</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token class-name">Object</span> metadataEvalDuration <span class="token operator">=</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">METADATA_EVAL_DURATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>metadataEvalDuration <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&#x26;&#x26;</span> evalDuration <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                evalDuration <span class="token operator">=</span> evalDuration<span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">)</span> metadataEvalDuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">            <span class="token class-name">Object</span> metadataPromptEvalDuration <span class="token operator">=</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">METADATA_PROMPT_EVAL_DURATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>metadataPromptEvalDuration <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&#x26;&#x26;</span> promptEvalDuration <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                promptEvalDuration <span class="token operator">=</span> promptEvalDuration<span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">)</span> metadataPromptEvalDuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">            <span class="token class-name">Object</span> metadataLoadDuration <span class="token operator">=</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">METADATA_LOAD_DURATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>metadataLoadDuration <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&#x26;&#x26;</span> loadDuration <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                loadDuration <span class="token operator">=</span> loadDuration<span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">)</span> metadataLoadDuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">            <span class="token class-name">Object</span> metadataTotalDuration <span class="token operator">=</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">METADATA_TOTAL_DURATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>metadataTotalDuration <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&#x26;&#x26;</span> totalDuration <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                totalDuration <span class="token operator">=</span> totalDuration<span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">)</span> metadataTotalDuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUsage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                promptTokens <span class="token operator">+=</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUsage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPromptTokens</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                generationTokens <span class="token operator">+=</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUsage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCompletionTokens</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                totalTokens <span class="token operator">+=</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUsage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTotalTokens</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token class-name">DefaultUsage</span> aggregatedUsage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultUsage</span><span class="token punctuation">(</span>promptTokens<span class="token punctuation">,</span> generationTokens<span class="token punctuation">,</span> totalTokens<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">return</span> <span class="token class-name">ChatResponseMetadata</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">usage</span><span class="token punctuation">(</span>aggregatedUsage<span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">keyValue</span><span class="token punctuation">(</span><span class="token constant">METADATA_CREATED_AT</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">createdAt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">keyValue</span><span class="token punctuation">(</span><span class="token constant">METADATA_EVAL_DURATION</span><span class="token punctuation">,</span> evalDuration<span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">keyValue</span><span class="token punctuation">(</span><span class="token constant">METADATA_EVAL_COUNT</span><span class="token punctuation">,</span> aggregatedUsage<span class="token punctuation">.</span><span class="token function">getCompletionTokens</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">keyValue</span><span class="token punctuation">(</span><span class="token constant">METADATA_LOAD_DURATION</span><span class="token punctuation">,</span> loadDuration<span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">keyValue</span><span class="token punctuation">(</span><span class="token constant">METADATA_PROMPT_EVAL_DURATION</span><span class="token punctuation">,</span> promptEvalDuration<span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">keyValue</span><span class="token punctuation">(</span><span class="token constant">METADATA_PROMPT_EVAL_COUNT</span><span class="token punctuation">,</span> aggregatedUsage<span class="token punctuation">.</span><span class="token function">getPromptTokens</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">keyValue</span><span class="token punctuation">(</span><span class="token constant">METADATA_TOTAL_DURATION</span><span class="token punctuation">,</span> totalDuration<span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">keyValue</span><span class="token punctuation">(</span><span class="token constant">DONE</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">DefaultUsage</span> <span class="token function">getDefaultUsage</span><span class="token punctuation">(</span><span class="token class-name">OllamaApi<span class="token punctuation">.</span>ChatResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DefaultUsage</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">promptEvalCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</span><span class="code-line">                <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">evalCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token annotation punctuation">@Override</span>
</span><span class="code-line">    <span class="token keyword">public</span> <span class="token class-name">ChatResponse</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Prompt</span> prompt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token comment">// Before moving any further, build the final request Prompt,</span>
</span><span class="code-line">        <span class="token comment">// merging runtime and default options.</span>
</span><span class="code-line">        <span class="token class-name">Prompt</span> requestPrompt <span class="token operator">=</span> <span class="token function">buildRequestPrompt</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">internalCall</span><span class="token punctuation">(</span>requestPrompt<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token class-name">ChatResponse</span> <span class="token function">internalCall</span><span class="token punctuation">(</span><span class="token class-name">Prompt</span> prompt<span class="token punctuation">,</span> <span class="token class-name">ChatResponse</span> previousChatResponse<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token class-name">OllamaApi<span class="token punctuation">.</span>ChatRequest</span> request <span class="token operator">=</span> <span class="token function">ollamaChatRequest</span><span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token class-name">ChatModelObservationContext</span> observationContext <span class="token operator">=</span> <span class="token class-name">ChatModelObservationContext</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">provider</span><span class="token punctuation">(</span><span class="token class-name">OllamaApiConstants</span><span class="token punctuation">.</span><span class="token constant">PROVIDER_NAME</span><span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token class-name">ChatResponse</span> response <span class="token operator">=</span> <span class="token class-name">ChatModelObservationDocumentation</span><span class="token punctuation">.</span><span class="token constant">CHAT_MODEL_OPERATION</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">observation</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>observationConvention<span class="token punctuation">,</span> <span class="token constant">DEFAULT_OBSERVATION_CONVENTION</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> observationContext<span class="token punctuation">,</span>
</span><span class="code-line">                        <span class="token keyword">this</span><span class="token punctuation">.</span>observationRegistry<span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">{</span>
</span><span class="code-line">
</span><span class="code-line">                    <span class="token class-name">OllamaApi<span class="token punctuation">.</span>ChatResponse</span> ollamaResponse <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chatApi<span class="token punctuation">.</span><span class="token function">chat</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">                    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token class-name">AssistantMessage<span class="token punctuation">.</span>ToolCall</span><span class="token punctuation">></span></span> toolCalls <span class="token operator">=</span> ollamaResponse<span class="token punctuation">.</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toolCalls</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                            <span class="token operator">:</span> ollamaResponse<span class="token punctuation">.</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                            <span class="token punctuation">.</span><span class="token function">toolCalls</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                            <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>toolCall <span class="token operator">-></span> <span class="token keyword">new</span> <span class="token class-name">AssistantMessage<span class="token punctuation">.</span>ToolCall</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"function"</span><span class="token punctuation">,</span> toolCall<span class="token punctuation">.</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</span><span class="code-line">                                    <span class="token class-name">ModelOptionsUtils</span><span class="token punctuation">.</span><span class="token function">toJsonString</span><span class="token punctuation">(</span>toolCall<span class="token punctuation">.</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">arguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span><span class="code-line">                            <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">                    <span class="token keyword">var</span> assistantMessage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AssistantMessage</span><span class="token punctuation">(</span>ollamaResponse<span class="token punctuation">.</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> toolCalls<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">                    <span class="token class-name">ChatGenerationMetadata</span> generationMetadata <span class="token operator">=</span> <span class="token class-name">ChatGenerationMetadata</span><span class="token punctuation">.</span><span class="token constant">NULL</span><span class="token punctuation">;</span>
</span><span class="code-line">                    <span class="token keyword">if</span> <span class="token punctuation">(</span>ollamaResponse<span class="token punctuation">.</span><span class="token function">promptEvalCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&#x26;&#x26;</span> ollamaResponse<span class="token punctuation">.</span><span class="token function">evalCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                        generationMetadata <span class="token operator">=</span> <span class="token class-name">ChatGenerationMetadata</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                                <span class="token punctuation">.</span><span class="token function">finishReason</span><span class="token punctuation">(</span>ollamaResponse<span class="token punctuation">.</span><span class="token function">doneReason</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span><span class="code-line">                                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">                    <span class="token keyword">var</span> generator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Generation</span><span class="token punctuation">(</span>assistantMessage<span class="token punctuation">,</span> generationMetadata<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                    <span class="token class-name">ChatResponse</span> chatResponse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChatResponse</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>generator<span class="token punctuation">)</span><span class="token punctuation">,</span>
</span><span class="code-line">                            <span class="token function">from</span><span class="token punctuation">(</span>ollamaResponse<span class="token punctuation">,</span> previousChatResponse<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">                    observationContext<span class="token punctuation">.</span><span class="token function">setResponse</span><span class="token punctuation">(</span>chatResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">                    <span class="token keyword">return</span> chatResponse<span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>toolExecutionEligibilityPredicate<span class="token punctuation">.</span><span class="token function">isToolExecutionRequired</span><span class="token punctuation">(</span>prompt<span class="token punctuation">.</span><span class="token function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">var</span> toolExecutionResult <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>toolCallingManager<span class="token punctuation">.</span><span class="token function">executeToolCalls</span><span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>toolExecutionResult<span class="token punctuation">.</span><span class="token function">returnDirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                <span class="token comment">// Return tool execution result directly to the client.</span>
</span><span class="code-line">                <span class="token keyword">return</span> <span class="token class-name">ChatResponse</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                        <span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
</span><span class="code-line">                        <span class="token punctuation">.</span><span class="token function">generations</span><span class="token punctuation">(</span><span class="token class-name">ToolExecutionResult</span><span class="token punctuation">.</span><span class="token function">buildGenerations</span><span class="token punctuation">(</span>toolExecutionResult<span class="token punctuation">)</span><span class="token punctuation">)</span>
</span><span class="code-line">                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">            <span class="token keyword">else</span> <span class="token punctuation">{</span>
</span><span class="code-line">                <span class="token comment">// Send the tool execution result back to the model.</span>
</span><span class="code-line">                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">internalCall</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Prompt</span><span class="token punctuation">(</span>toolExecutionResult<span class="token punctuation">.</span><span class="token function">conversationHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> prompt<span class="token punctuation">.</span><span class="token function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</span><span class="code-line">                        response<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">return</span> response<span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token annotation punctuation">@Override</span>
</span><span class="code-line">    <span class="token keyword">public</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token class-name">ChatResponse</span><span class="token punctuation">></span></span> <span class="token function">stream</span><span class="token punctuation">(</span><span class="token class-name">Prompt</span> prompt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token comment">// Before moving any further, build the final request Prompt,</span>
</span><span class="code-line">        <span class="token comment">// merging runtime and default options.</span>
</span><span class="code-line">        <span class="token class-name">Prompt</span> requestPrompt <span class="token operator">=</span> <span class="token function">buildRequestPrompt</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">internalStream</span><span class="token punctuation">(</span>requestPrompt<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token class-name">ChatResponse</span><span class="token punctuation">></span></span> <span class="token function">internalStream</span><span class="token punctuation">(</span><span class="token class-name">Prompt</span> prompt<span class="token punctuation">,</span> <span class="token class-name">ChatResponse</span> previousChatResponse<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token keyword">return</span> <span class="token class-name">Flux</span><span class="token punctuation">.</span><span class="token function">deferContextual</span><span class="token punctuation">(</span>contextView <span class="token operator">-></span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token class-name">OllamaApi<span class="token punctuation">.</span>ChatRequest</span> request <span class="token operator">=</span> <span class="token function">ollamaChatRequest</span><span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">            <span class="token keyword">final</span> <span class="token class-name">ChatModelObservationContext</span> observationContext <span class="token operator">=</span> <span class="token class-name">ChatModelObservationContext</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                    <span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span>
</span><span class="code-line">                    <span class="token punctuation">.</span><span class="token function">provider</span><span class="token punctuation">(</span><span class="token class-name">OllamaApiConstants</span><span class="token punctuation">.</span><span class="token constant">PROVIDER_NAME</span><span class="token punctuation">)</span>
</span><span class="code-line">                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">            <span class="token class-name">Observation</span> observation <span class="token operator">=</span> <span class="token class-name">ChatModelObservationDocumentation</span><span class="token punctuation">.</span><span class="token constant">CHAT_MODEL_OPERATION</span><span class="token punctuation">.</span><span class="token function">observation</span><span class="token punctuation">(</span>
</span><span class="code-line">                    <span class="token keyword">this</span><span class="token punctuation">.</span>observationConvention<span class="token punctuation">,</span> <span class="token constant">DEFAULT_OBSERVATION_CONVENTION</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> observationContext<span class="token punctuation">,</span>
</span><span class="code-line">                    <span class="token keyword">this</span><span class="token punctuation">.</span>observationRegistry<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">            observation<span class="token punctuation">.</span><span class="token function">parentObservation</span><span class="token punctuation">(</span>contextView<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span><span class="token class-name">ObservationThreadLocalAccessor</span><span class="token punctuation">.</span><span class="token constant">KEY</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">            <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token class-name">OllamaApi<span class="token punctuation">.</span>ChatResponse</span><span class="token punctuation">></span></span> ollamaResponse <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chatApi<span class="token punctuation">.</span><span class="token function">streamingChat</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">            <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token class-name">ChatResponse</span><span class="token punctuation">></span></span> chatResponse <span class="token operator">=</span> ollamaResponse<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>chunk <span class="token operator">-></span> <span class="token punctuation">{</span>
</span><span class="code-line">                <span class="token class-name">String</span> content <span class="token operator">=</span> <span class="token punctuation">(</span>chunk<span class="token punctuation">.</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> chunk<span class="token punctuation">.</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token class-name">AssistantMessage<span class="token punctuation">.</span>ToolCall</span><span class="token punctuation">></span></span> toolCalls <span class="token operator">=</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">                <span class="token comment">// Added null checks to prevent NPE when accessing tool calls</span>
</span><span class="code-line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>chunk<span class="token punctuation">.</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&#x26;&#x26;</span> chunk<span class="token punctuation">.</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toolCalls</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                    toolCalls <span class="token operator">=</span> chunk<span class="token punctuation">.</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                            <span class="token punctuation">.</span><span class="token function">toolCalls</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                            <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>toolCall <span class="token operator">-></span> <span class="token keyword">new</span> <span class="token class-name">AssistantMessage<span class="token punctuation">.</span>ToolCall</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"function"</span><span class="token punctuation">,</span> toolCall<span class="token punctuation">.</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</span><span class="code-line">                                    <span class="token class-name">ModelOptionsUtils</span><span class="token punctuation">.</span><span class="token function">toJsonString</span><span class="token punctuation">(</span>toolCall<span class="token punctuation">.</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">arguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span><span class="code-line">                            <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">                <span class="token keyword">var</span> assistantMessage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AssistantMessage</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> toolCalls<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">                <span class="token class-name">ChatGenerationMetadata</span> generationMetadata <span class="token operator">=</span> <span class="token class-name">ChatGenerationMetadata</span><span class="token punctuation">.</span><span class="token constant">NULL</span><span class="token punctuation">;</span>
</span><span class="code-line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>chunk<span class="token punctuation">.</span><span class="token function">promptEvalCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&#x26;&#x26;</span> chunk<span class="token punctuation">.</span><span class="token function">evalCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                    generationMetadata <span class="token operator">=</span> <span class="token class-name">ChatGenerationMetadata</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finishReason</span><span class="token punctuation">(</span>chunk<span class="token punctuation">.</span><span class="token function">doneReason</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">                <span class="token keyword">var</span> generator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Generation</span><span class="token punctuation">(</span>assistantMessage<span class="token punctuation">,</span> generationMetadata<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ChatResponse</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>generator<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">from</span><span class="token punctuation">(</span>chunk<span class="token punctuation">,</span> previousChatResponse<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">            <span class="token comment">// @formatter:off</span>
</span><span class="code-line">            <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token class-name">ChatResponse</span><span class="token punctuation">></span></span> chatResponseFlux <span class="token operator">=</span> chatResponse<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>response <span class="token operator">-></span> <span class="token punctuation">{</span>
</span><span class="code-line">                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>toolExecutionEligibilityPredicate<span class="token punctuation">.</span><span class="token function">isToolExecutionRequired</span><span class="token punctuation">(</span>prompt<span class="token punctuation">.</span><span class="token function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                            <span class="token comment">// FIXME: bounded elastic needs to be used since tool calling</span>
</span><span class="code-line">                            <span class="token comment">//  is currently only synchronous</span>
</span><span class="code-line">                            <span class="token keyword">return</span> <span class="token class-name">Flux</span><span class="token punctuation">.</span><span class="token function">defer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">{</span>
</span><span class="code-line">                                <span class="token keyword">var</span> toolExecutionResult <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>toolCallingManager<span class="token punctuation">.</span><span class="token function">executeToolCalls</span><span class="token punctuation">(</span>prompt<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                                <span class="token keyword">if</span> <span class="token punctuation">(</span>toolExecutionResult<span class="token punctuation">.</span><span class="token function">returnDirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                                    <span class="token comment">// Return tool execution result directly to the client.</span>
</span><span class="code-line">                                    <span class="token keyword">return</span> <span class="token class-name">Flux</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token class-name">ChatResponse</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
</span><span class="code-line">                                            <span class="token punctuation">.</span><span class="token function">generations</span><span class="token punctuation">(</span><span class="token class-name">ToolExecutionResult</span><span class="token punctuation">.</span><span class="token function">buildGenerations</span><span class="token punctuation">(</span>toolExecutionResult<span class="token punctuation">)</span><span class="token punctuation">)</span>
</span><span class="code-line">                                            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                                <span class="token punctuation">}</span>
</span><span class="code-line">                                <span class="token keyword">else</span> <span class="token punctuation">{</span>
</span><span class="code-line">                                    <span class="token comment">// Send the tool execution result back to the model.</span>
</span><span class="code-line">                                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">internalStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Prompt</span><span class="token punctuation">(</span>toolExecutionResult<span class="token punctuation">.</span><span class="token function">conversationHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> prompt<span class="token punctuation">.</span><span class="token function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</span><span class="code-line">                                            response<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                                <span class="token punctuation">}</span>
</span><span class="code-line">                            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span><span class="token class-name">Schedulers</span><span class="token punctuation">.</span><span class="token function">boundedElastic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                        <span class="token punctuation">}</span>
</span><span class="code-line">                        <span class="token keyword">else</span> <span class="token punctuation">{</span>
</span><span class="code-line">                            <span class="token keyword">return</span> <span class="token class-name">Flux</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                        <span class="token punctuation">}</span>
</span><span class="code-line">                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span><span class="code-line">                    <span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span>observation<span class="token operator">::</span><span class="token function">error</span><span class="token punctuation">)</span>
</span><span class="code-line">                    <span class="token punctuation">.</span><span class="token function">doFinally</span><span class="token punctuation">(</span>s <span class="token operator">-></span>
</span><span class="code-line">                            observation<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                    <span class="token punctuation">)</span>
</span><span class="code-line">                    <span class="token punctuation">.</span><span class="token function">contextWrite</span><span class="token punctuation">(</span>ctx <span class="token operator">-></span> ctx<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ObservationThreadLocalAccessor</span><span class="token punctuation">.</span><span class="token constant">KEY</span><span class="token punctuation">,</span> observation<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token comment">// @formatter:on</span>
</span><span class="code-line">
</span><span class="code-line">            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MessageAggregator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">aggregate</span><span class="token punctuation">(</span>chatResponseFlux<span class="token punctuation">,</span> observationContext<span class="token operator">::</span><span class="token function">setResponse</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token class-name">Prompt</span> <span class="token function">buildRequestPrompt</span><span class="token punctuation">(</span><span class="token class-name">Prompt</span> prompt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token comment">// Process runtime options</span>
</span><span class="code-line">        <span class="token class-name">OllamaOptions</span> runtimeOptions <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>prompt<span class="token punctuation">.</span><span class="token function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>prompt<span class="token punctuation">.</span><span class="token function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">ToolCallingChatOptions</span> toolCallingChatOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                runtimeOptions <span class="token operator">=</span> <span class="token class-name">ModelOptionsUtils</span><span class="token punctuation">.</span><span class="token function">copyToTarget</span><span class="token punctuation">(</span>toolCallingChatOptions<span class="token punctuation">,</span> <span class="token class-name">ToolCallingChatOptions</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
</span><span class="code-line">                        <span class="token class-name">OllamaOptions</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">            <span class="token keyword">else</span> <span class="token punctuation">{</span>
</span><span class="code-line">                runtimeOptions <span class="token operator">=</span> <span class="token class-name">ModelOptionsUtils</span><span class="token punctuation">.</span><span class="token function">copyToTarget</span><span class="token punctuation">(</span>prompt<span class="token punctuation">.</span><span class="token function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ChatOptions</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
</span><span class="code-line">                        <span class="token class-name">OllamaOptions</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token comment">// Define request options by merging runtime options and default options</span>
</span><span class="code-line">        <span class="token class-name">OllamaOptions</span> requestOptions <span class="token operator">=</span> <span class="token class-name">ModelOptionsUtils</span><span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>runtimeOptions<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions<span class="token punctuation">,</span>
</span><span class="code-line">                <span class="token class-name">OllamaOptions</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token comment">// Merge @JsonIgnore-annotated options explicitly since they are ignored by</span>
</span><span class="code-line">        <span class="token comment">// Jackson, used by ModelOptionsUtils.</span>
</span><span class="code-line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>runtimeOptions <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            requestOptions<span class="token punctuation">.</span><span class="token function">setInternalToolExecutionEnabled</span><span class="token punctuation">(</span>
</span><span class="code-line">                    <span class="token class-name">ModelOptionsUtils</span><span class="token punctuation">.</span><span class="token function">mergeOption</span><span class="token punctuation">(</span>runtimeOptions<span class="token punctuation">.</span><span class="token function">getInternalToolExecutionEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</span><span class="code-line">                            <span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions<span class="token punctuation">.</span><span class="token function">getInternalToolExecutionEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            requestOptions<span class="token punctuation">.</span><span class="token function">setToolNames</span><span class="token punctuation">(</span><span class="token class-name">ToolCallingChatOptions</span><span class="token punctuation">.</span><span class="token function">mergeToolNames</span><span class="token punctuation">(</span>runtimeOptions<span class="token punctuation">.</span><span class="token function">getToolNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</span><span class="code-line">                    <span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions<span class="token punctuation">.</span><span class="token function">getToolNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            requestOptions<span class="token punctuation">.</span><span class="token function">setToolCallbacks</span><span class="token punctuation">(</span><span class="token class-name">ToolCallingChatOptions</span><span class="token punctuation">.</span><span class="token function">mergeToolCallbacks</span><span class="token punctuation">(</span>runtimeOptions<span class="token punctuation">.</span><span class="token function">getToolCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</span><span class="code-line">                    <span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions<span class="token punctuation">.</span><span class="token function">getToolCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            requestOptions<span class="token punctuation">.</span><span class="token function">setToolContext</span><span class="token punctuation">(</span><span class="token class-name">ToolCallingChatOptions</span><span class="token punctuation">.</span><span class="token function">mergeToolContext</span><span class="token punctuation">(</span>runtimeOptions<span class="token punctuation">.</span><span class="token function">getToolContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</span><span class="code-line">                    <span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions<span class="token punctuation">.</span><span class="token function">getToolContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">        <span class="token keyword">else</span> <span class="token punctuation">{</span>
</span><span class="code-line">            requestOptions<span class="token punctuation">.</span><span class="token function">setInternalToolExecutionEnabled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions<span class="token punctuation">.</span><span class="token function">getInternalToolExecutionEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            requestOptions<span class="token punctuation">.</span><span class="token function">setToolNames</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions<span class="token punctuation">.</span><span class="token function">getToolNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            requestOptions<span class="token punctuation">.</span><span class="token function">setToolCallbacks</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions<span class="token punctuation">.</span><span class="token function">getToolCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            requestOptions<span class="token punctuation">.</span><span class="token function">setToolContext</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions<span class="token punctuation">.</span><span class="token function">getToolContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token comment">// Validate request options</span>
</span><span class="code-line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>requestOptions<span class="token punctuation">.</span><span class="token function">getModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"model cannot be null or empty"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token class-name">ToolCallingChatOptions</span><span class="token punctuation">.</span><span class="token function">validateToolCallbacks</span><span class="token punctuation">(</span>requestOptions<span class="token punctuation">.</span><span class="token function">getToolCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Prompt</span><span class="token punctuation">(</span>prompt<span class="token punctuation">.</span><span class="token function">getInstructions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token doc-comment comment">/**
</span></span><span class="code-line"><span class="token doc-comment comment">     * Package access for testing.
</span></span><span class="code-line"><span class="token doc-comment comment">     */</span>
</span><span class="code-line">    <span class="token class-name">OllamaApi<span class="token punctuation">.</span>ChatRequest</span> <span class="token function">ollamaChatRequest</span><span class="token punctuation">(</span><span class="token class-name">Prompt</span> prompt<span class="token punctuation">,</span> <span class="token keyword">boolean</span> stream<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token class-name">OllamaApi<span class="token punctuation">.</span>Message</span><span class="token punctuation">></span></span> ollamaMessages <span class="token operator">=</span> prompt<span class="token punctuation">.</span><span class="token function">getInstructions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>message <span class="token operator">-></span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>message <span class="token keyword">instanceof</span> <span class="token class-name">UserMessage</span> userMessage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                <span class="token keyword">var</span> messageBuilder <span class="token operator">=</span> <span class="token class-name">OllamaApi<span class="token punctuation">.</span>Message</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token class-name">OllamaApi<span class="token punctuation">.</span>Message<span class="token punctuation">.</span>Role</span><span class="token punctuation">.</span><span class="token constant">USER</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>userMessage<span class="token punctuation">.</span><span class="token function">getMedia</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                    messageBuilder<span class="token punctuation">.</span><span class="token function">images</span><span class="token punctuation">(</span>
</span><span class="code-line">                            userMessage<span class="token punctuation">.</span><span class="token function">getMedia</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>media <span class="token operator">-></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fromMediaData</span><span class="token punctuation">(</span>media<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                <span class="token punctuation">}</span>
</span><span class="code-line">                <span class="token keyword">return</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>messageBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>message <span class="token keyword">instanceof</span> <span class="token class-name">SystemMessage</span> systemMessage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                <span class="token keyword">return</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">OllamaApi<span class="token punctuation">.</span>Message</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token class-name">OllamaApi<span class="token punctuation">.</span>Message<span class="token punctuation">.</span>Role</span><span class="token punctuation">.</span><span class="token constant">SYSTEM</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span>systemMessage<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>message <span class="token keyword">instanceof</span> <span class="token class-name">AssistantMessage</span> assistantMessage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token class-name">OllamaApi<span class="token punctuation">.</span>Message<span class="token punctuation">.</span>ToolCall</span><span class="token punctuation">></span></span> toolCalls <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
</span><span class="code-line">                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>assistantMessage<span class="token punctuation">.</span><span class="token function">getToolCalls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                    toolCalls <span class="token operator">=</span> assistantMessage<span class="token punctuation">.</span><span class="token function">getToolCalls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>toolCall <span class="token operator">-></span> <span class="token punctuation">{</span>
</span><span class="code-line">                        <span class="token keyword">var</span> function <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OllamaApi<span class="token punctuation">.</span>Message<span class="token punctuation">.</span>ToolCallFunction</span><span class="token punctuation">(</span>toolCall<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</span><span class="code-line">                                <span class="token class-name">JsonParser</span><span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>toolCall<span class="token punctuation">.</span><span class="token function">arguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OllamaApi<span class="token punctuation">.</span>Message<span class="token punctuation">.</span>ToolCall</span><span class="token punctuation">(</span>function<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                <span class="token punctuation">}</span>
</span><span class="code-line">                <span class="token keyword">return</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">OllamaApi<span class="token punctuation">.</span>Message</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token class-name">OllamaApi<span class="token punctuation">.</span>Message<span class="token punctuation">.</span>Role</span><span class="token punctuation">.</span><span class="token constant">ASSISTANT</span><span class="token punctuation">)</span>
</span><span class="code-line">                        <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span>assistantMessage<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span><span class="code-line">                        <span class="token punctuation">.</span><span class="token function">toolCalls</span><span class="token punctuation">(</span>toolCalls<span class="token punctuation">)</span>
</span><span class="code-line">                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>message <span class="token keyword">instanceof</span> <span class="token class-name">ToolResponseMessage</span> toolMessage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                <span class="token keyword">return</span> toolMessage<span class="token punctuation">.</span><span class="token function">getResponses</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                        <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tr <span class="token operator">-></span> <span class="token class-name">OllamaApi<span class="token punctuation">.</span>Message</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token class-name">OllamaApi<span class="token punctuation">.</span>Message<span class="token punctuation">.</span>Role</span><span class="token punctuation">.</span><span class="token constant">TOOL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span>tr<span class="token punctuation">.</span><span class="token function">responseData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span><span class="code-line">                        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"Unsupported message type: "</span> <span class="token operator">+</span> message<span class="token punctuation">.</span><span class="token function">getMessageType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token operator">::</span><span class="token function">stream</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token class-name">OllamaOptions</span> requestOptions <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">OllamaOptions</span><span class="token punctuation">)</span> prompt<span class="token punctuation">.</span><span class="token function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token class-name">OllamaApi<span class="token punctuation">.</span>ChatRequest<span class="token punctuation">.</span>Builder</span> requestBuilder <span class="token operator">=</span> <span class="token class-name">OllamaApi<span class="token punctuation">.</span>ChatRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>requestOptions<span class="token punctuation">.</span><span class="token function">getModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">messages</span><span class="token punctuation">(</span>ollamaMessages<span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">options</span><span class="token punctuation">(</span>requestOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>requestOptions<span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            requestBuilder<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>requestOptions<span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>requestOptions<span class="token punctuation">.</span><span class="token function">getKeepAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            requestBuilder<span class="token punctuation">.</span><span class="token function">keepAlive</span><span class="token punctuation">(</span>requestOptions<span class="token punctuation">.</span><span class="token function">getKeepAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token class-name">ToolDefinition</span><span class="token punctuation">></span></span> toolDefinitions <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>toolCallingManager<span class="token punctuation">.</span><span class="token function">resolveToolDefinitions</span><span class="token punctuation">(</span>requestOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>toolDefinitions<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            requestBuilder<span class="token punctuation">.</span><span class="token function">tools</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTools</span><span class="token punctuation">(</span>toolDefinitions<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">return</span> requestBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">fromMediaData</span><span class="token punctuation">(</span><span class="token class-name">Object</span> mediaData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>mediaData <span class="token keyword">instanceof</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">return</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mediaData <span class="token keyword">instanceof</span> <span class="token class-name">String</span> text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">return</span> text<span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">        <span class="token keyword">else</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"Unsupported media data type: "</span> <span class="token operator">+</span> mediaData<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token class-name">OllamaApi<span class="token punctuation">.</span>ChatRequest<span class="token punctuation">.</span>Tool</span><span class="token punctuation">></span></span> <span class="token function">getTools</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token class-name">ToolDefinition</span><span class="token punctuation">></span></span> toolDefinitions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token keyword">return</span> toolDefinitions<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>toolDefinition <span class="token operator">-></span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">var</span> tool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OllamaApi<span class="token punctuation">.</span>ChatRequest<span class="token punctuation">.</span>Tool<span class="token punctuation">.</span>Function</span><span class="token punctuation">(</span>toolDefinition<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> toolDefinition<span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</span><span class="code-line">                    toolDefinition<span class="token punctuation">.</span><span class="token function">inputSchema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OllamaApi<span class="token punctuation">.</span>ChatRequest<span class="token punctuation">.</span>Tool</span><span class="token punctuation">(</span>tool<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token annotation punctuation">@Override</span>
</span><span class="code-line">    <span class="token keyword">public</span> <span class="token class-name">ChatOptions</span> <span class="token function">getDefaultOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token keyword">return</span> <span class="token class-name">OllamaOptions</span><span class="token punctuation">.</span><span class="token function">fromOptions</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token doc-comment comment">/**
</span></span><span class="code-line"><span class="token doc-comment comment">     * Pull the given model into Ollama based on the specified strategy.
</span></span><span class="code-line"><span class="token doc-comment comment">     */</span>
</span><span class="code-line">    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initializeModel</span><span class="token punctuation">(</span><span class="token class-name">String</span> model<span class="token punctuation">,</span> <span class="token class-name">PullModelStrategy</span> pullModelStrategy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>pullModelStrategy <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&#x26;&#x26;</span> <span class="token operator">!</span><span class="token class-name">PullModelStrategy</span><span class="token punctuation">.</span><span class="token constant">NEVER</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>pullModelStrategy<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">this</span><span class="token punctuation">.</span>modelManager<span class="token punctuation">.</span><span class="token function">pullModel</span><span class="token punctuation">(</span>model<span class="token punctuation">,</span> pullModelStrategy<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token doc-comment comment">/**
</span></span><span class="code-line"><span class="token doc-comment comment">     * Use the provided convention for reporting observation data
</span></span><span class="code-line"><span class="token doc-comment comment">     * <span class="token keyword">@param</span> <span class="token parameter">observationConvention</span> The provided convention
</span></span><span class="code-line"><span class="token doc-comment comment">     */</span>
</span><span class="code-line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setObservationConvention</span><span class="token punctuation">(</span><span class="token class-name">ChatModelObservationConvention</span> observationConvention<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>observationConvention<span class="token punctuation">,</span> <span class="token string">"observationConvention cannot be null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token keyword">this</span><span class="token punctuation">.</span>observationConvention <span class="token operator">=</span> observationConvention<span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Builder</span> <span class="token punctuation">{</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">private</span> <span class="token class-name">OllamaApi</span> ollamaApi<span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">private</span> <span class="token class-name">OllamaOptions</span> defaultOptions <span class="token operator">=</span> <span class="token class-name">OllamaOptions</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token class-name">OllamaModel</span><span class="token punctuation">.</span><span class="token constant">MISTRAL</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">private</span> <span class="token class-name">ToolCallingManager</span> toolCallingManager<span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">private</span> <span class="token class-name">ToolExecutionEligibilityPredicate</span> toolExecutionEligibilityPredicate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultToolExecutionEligibilityPredicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">private</span> <span class="token class-name">ObservationRegistry</span> observationRegistry <span class="token operator">=</span> <span class="token class-name">ObservationRegistry</span><span class="token punctuation">.</span><span class="token constant">NOOP</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">private</span> <span class="token class-name">ModelManagementOptions</span> modelManagementOptions <span class="token operator">=</span> <span class="token class-name">ModelManagementOptions</span><span class="token punctuation">.</span><span class="token function">defaults</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">private</span> <span class="token class-name">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">public</span> <span class="token class-name">OllamaAlibabaChatModel<span class="token punctuation">.</span>Builder</span> <span class="token function">ollamaApi</span><span class="token punctuation">(</span><span class="token class-name">OllamaApi</span> ollamaApi<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">this</span><span class="token punctuation">.</span>ollamaApi <span class="token operator">=</span> ollamaApi<span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">public</span> <span class="token class-name">OllamaAlibabaChatModel<span class="token punctuation">.</span>Builder</span> <span class="token function">defaultOptions</span><span class="token punctuation">(</span><span class="token class-name">OllamaOptions</span> defaultOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions <span class="token operator">=</span> defaultOptions<span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">public</span> <span class="token class-name">OllamaAlibabaChatModel<span class="token punctuation">.</span>Builder</span> <span class="token function">toolCallingManager</span><span class="token punctuation">(</span><span class="token class-name">ToolCallingManager</span> toolCallingManager<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">this</span><span class="token punctuation">.</span>toolCallingManager <span class="token operator">=</span> toolCallingManager<span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">public</span> <span class="token class-name">OllamaAlibabaChatModel<span class="token punctuation">.</span>Builder</span> <span class="token function">toolExecutionEligibilityPredicate</span><span class="token punctuation">(</span>
</span><span class="code-line">                <span class="token class-name">ToolExecutionEligibilityPredicate</span> toolExecutionEligibilityPredicate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">this</span><span class="token punctuation">.</span>toolExecutionEligibilityPredicate <span class="token operator">=</span> toolExecutionEligibilityPredicate<span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">public</span> <span class="token class-name">OllamaAlibabaChatModel<span class="token punctuation">.</span>Builder</span> <span class="token function">observationRegistry</span><span class="token punctuation">(</span><span class="token class-name">ObservationRegistry</span> observationRegistry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">this</span><span class="token punctuation">.</span>observationRegistry <span class="token operator">=</span> observationRegistry<span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">public</span> <span class="token class-name">OllamaAlibabaChatModel<span class="token punctuation">.</span>Builder</span> <span class="token function">modelManagementOptions</span><span class="token punctuation">(</span><span class="token class-name">ModelManagementOptions</span> modelManagementOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">this</span><span class="token punctuation">.</span>modelManagementOptions <span class="token operator">=</span> modelManagementOptions<span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">        <span class="token keyword">public</span> <span class="token class-name">OllamaAlibabaChatModel</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>toolCallingManager <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OllamaAlibabaChatModel</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ollamaApi<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>toolCallingManager<span class="token punctuation">,</span>
</span><span class="code-line">                        <span class="token keyword">this</span><span class="token punctuation">.</span>observationRegistry<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>modelManagementOptions<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>toolExecutionEligibilityPredicate<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OllamaAlibabaChatModel</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ollamaApi<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions<span class="token punctuation">,</span> <span class="token constant">DEFAULT_TOOL_CALLING_MANAGER</span><span class="token punctuation">,</span>
</span><span class="code-line">                    <span class="token keyword">this</span><span class="token punctuation">.</span>observationRegistry<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>modelManagementOptions<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>toolExecutionEligibilityPredicate<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<p>上面这段代码其实大部分是把OllamaChatModel的类复制过来，只修改了关键部分
<img src="https://p9-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/4ca8551f7eea4044bec067f783246d5c~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgQmk=:q75.awebp?rk3s=f64ab15b&#x26;x-expires=1756698583&#x26;x-signature=%2Bgs2GMjVUqCFCPHChP6CW6yXS3s%3D" alt="">
把图片中if语句中的代码替换成如下代码即可</p>
<pre class="language-java"><code class="language-java code-highlight"><span class="code-line"><span class="token keyword">if</span> <span class="token punctuation">(</span>previousChatResponse <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&#x26;&#x26;</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token class-name">Object</span> metadataEvalDuration <span class="token operator">=</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">METADATA_EVAL_DURATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>metadataEvalDuration <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&#x26;&#x26;</span> evalDuration <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                evalDuration <span class="token operator">=</span> evalDuration<span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">)</span> metadataEvalDuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">            <span class="token class-name">Object</span> metadataPromptEvalDuration <span class="token operator">=</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">METADATA_PROMPT_EVAL_DURATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>metadataPromptEvalDuration <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&#x26;&#x26;</span> promptEvalDuration <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                promptEvalDuration <span class="token operator">=</span> promptEvalDuration<span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">)</span> metadataPromptEvalDuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">            <span class="token class-name">Object</span> metadataLoadDuration <span class="token operator">=</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">METADATA_LOAD_DURATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>metadataLoadDuration <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&#x26;&#x26;</span> loadDuration <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                loadDuration <span class="token operator">=</span> loadDuration<span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">)</span> metadataLoadDuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">            <span class="token class-name">Object</span> metadataTotalDuration <span class="token operator">=</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">METADATA_TOTAL_DURATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>metadataTotalDuration <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&#x26;&#x26;</span> totalDuration <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                totalDuration <span class="token operator">=</span> totalDuration<span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">)</span> metadataTotalDuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUsage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">                promptTokens <span class="token operator">+=</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUsage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPromptTokens</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                generationTokens <span class="token operator">+=</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUsage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCompletionTokens</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">                totalTokens <span class="token operator">+=</span> previousChatResponse<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUsage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTotalTokens</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">            <span class="token punctuation">}</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span></code></pre>
<p>下一步把新建的OllamaAlibabaChatModel类注册成为Bean。具体注册方式参考下面代码，AiConfiguration.ollamaAlibabaChatModel方法</p>
<pre class="language-java"><code class="language-java code-highlight"><span class="code-line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>bi<span class="token punctuation">.</span>demoai<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>bi<span class="token punctuation">.</span>demoai<span class="token punctuation">.</span>constants<span class="token punctuation">.</span></span><span class="token class-name">SystemConstants</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>bi<span class="token punctuation">.</span>demoai<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">OllamaAlibabaChatModel</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>bi<span class="token punctuation">.</span>demoai<span class="token punctuation">.</span>tools<span class="token punctuation">.</span></span><span class="token class-name">CourseTools</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>micrometer<span class="token punctuation">.</span>observation<span class="token punctuation">.</span></span><span class="token class-name">ObservationRegistry</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">RequiredArgsConstructor</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">ChatClient</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>client<span class="token punctuation">.</span>advisor<span class="token punctuation">.</span></span><span class="token class-name">MessageChatMemoryAdvisor</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>client<span class="token punctuation">.</span>advisor<span class="token punctuation">.</span></span><span class="token class-name">SimpleLoggerAdvisor</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>memory<span class="token punctuation">.</span></span><span class="token class-name">ChatMemory</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>memory<span class="token punctuation">.</span></span><span class="token class-name">MessageWindowChatMemory</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>chat<span class="token punctuation">.</span>observation<span class="token punctuation">.</span></span><span class="token class-name">ChatModelObservationConvention</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>model<span class="token punctuation">.</span>ollama<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">OllamaChatProperties</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>model<span class="token punctuation">.</span>ollama<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">OllamaInitializationProperties</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>model<span class="token punctuation">.</span>tool<span class="token punctuation">.</span></span><span class="token class-name">DefaultToolExecutionEligibilityPredicate</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>model<span class="token punctuation">.</span>tool<span class="token punctuation">.</span></span><span class="token class-name">ToolCallingManager</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>model<span class="token punctuation">.</span>tool<span class="token punctuation">.</span></span><span class="token class-name">ToolExecutionEligibilityPredicate</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>ollama<span class="token punctuation">.</span></span><span class="token class-name">OllamaChatModel</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>ollama<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">OllamaApi</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>ollama<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">ModelManagementOptions</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ai<span class="token punctuation">.</span>ollama<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">PullModelStrategy</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">ObjectProvider</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>condition<span class="token punctuation">.</span></span><span class="token class-name">ConditionalOnMissingBean</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Objects</span></span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token doc-comment comment">/**
</span></span><span class="code-line"><span class="token doc-comment comment"> * ai相关配置类
</span></span><span class="code-line"><span class="token doc-comment comment"> * <span class="token keyword">@author</span>: Bi
</span></span><span class="code-line"><span class="token doc-comment comment"> * <span class="token keyword">@date</span>: 2025/5/10
</span></span><span class="code-line"><span class="token doc-comment comment"> */</span>
</span><span class="code-line"><span class="token annotation punctuation">@Configuration</span>
</span><span class="code-line"><span class="token annotation punctuation">@RequiredArgsConstructor</span>
</span><span class="code-line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AiConfiguration</span> <span class="token punctuation">{</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token annotation punctuation">@Bean</span>
</span><span class="code-line">    <span class="token keyword">public</span> <span class="token class-name">ChatMemory</span> <span class="token function">chatMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token keyword">return</span> <span class="token class-name">MessageWindowChatMemory</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">maxMessages</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token doc-comment comment">/**
</span></span><span class="code-line"><span class="token doc-comment comment">     * 自定义兼容阿里巴巴模型
</span></span><span class="code-line"><span class="token doc-comment comment">     * <span class="token keyword">@param</span> <span class="token parameter">ollamaApi</span> ollamaApi
</span></span><span class="code-line"><span class="token doc-comment comment">     * <span class="token keyword">@param</span> <span class="token parameter">properties</span> properties
</span></span><span class="code-line"><span class="token doc-comment comment">     * <span class="token keyword">@param</span> <span class="token parameter">initProperties</span> initProperties
</span></span><span class="code-line"><span class="token doc-comment comment">     * <span class="token keyword">@param</span> <span class="token parameter">toolCallingManager</span> toolCallingManager
</span></span><span class="code-line"><span class="token doc-comment comment">     * <span class="token keyword">@param</span> <span class="token parameter">observationRegistry</span> observationRegistry
</span></span><span class="code-line"><span class="token doc-comment comment">     * <span class="token keyword">@param</span> <span class="token parameter">observationConvention</span> observationConvention
</span></span><span class="code-line"><span class="token doc-comment comment">     * <span class="token keyword">@param</span> <span class="token parameter">ollamaToolExecutionEligibilityPredicate</span> ollamaToolExecutionEligibilityPredicate
</span></span><span class="code-line"><span class="token doc-comment comment">     * <span class="token keyword">@return</span> OllamaAlibabaChatModel
</span></span><span class="code-line"><span class="token doc-comment comment">     */</span>
</span><span class="code-line">    <span class="token annotation punctuation">@Bean</span>
</span><span class="code-line">    <span class="token keyword">public</span> <span class="token class-name">OllamaAlibabaChatModel</span> <span class="token function">ollamaAlibabaChatModel</span><span class="token punctuation">(</span><span class="token class-name">OllamaApi</span> ollamaApi<span class="token punctuation">,</span> <span class="token class-name">OllamaChatProperties</span> properties<span class="token punctuation">,</span> <span class="token class-name">OllamaInitializationProperties</span> initProperties<span class="token punctuation">,</span> <span class="token class-name">ToolCallingManager</span> toolCallingManager<span class="token punctuation">,</span> <span class="token class-name">ObjectProvider</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token class-name">ObservationRegistry</span><span class="token punctuation">></span></span> observationRegistry<span class="token punctuation">,</span> <span class="token class-name">ObjectProvider</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token class-name">ChatModelObservationConvention</span><span class="token punctuation">></span></span> observationConvention<span class="token punctuation">,</span> <span class="token class-name">ObjectProvider</span><span class="token generics"><span class="token punctuation">&#x3C;</span><span class="token class-name">ToolExecutionEligibilityPredicate</span><span class="token punctuation">></span></span> ollamaToolExecutionEligibilityPredicate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token class-name">PullModelStrategy</span> chatModelPullStrategy <span class="token operator">=</span> initProperties<span class="token punctuation">.</span><span class="token function">getChat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isInclude</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> initProperties<span class="token punctuation">.</span><span class="token function">getPullModelStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token class-name">PullModelStrategy</span><span class="token punctuation">.</span><span class="token constant">NEVER</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token class-name">OllamaAlibabaChatModel</span> chatModel <span class="token operator">=</span> <span class="token class-name">OllamaAlibabaChatModel</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ollamaApi</span><span class="token punctuation">(</span>ollamaApi<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">defaultOptions</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toolCallingManager</span><span class="token punctuation">(</span>toolCallingManager<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toolExecutionEligibilityPredicate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ToolExecutionEligibilityPredicate</span><span class="token punctuation">)</span>ollamaToolExecutionEligibilityPredicate<span class="token punctuation">.</span><span class="token function">getIfUnique</span><span class="token punctuation">(</span><span class="token class-name">DefaultToolExecutionEligibilityPredicate</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">observationRegistry</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ObservationRegistry</span><span class="token punctuation">)</span>observationRegistry<span class="token punctuation">.</span><span class="token function">getIfUnique</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">{</span>
</span><span class="code-line">            <span class="token keyword">return</span> <span class="token class-name">ObservationRegistry</span><span class="token punctuation">.</span><span class="token constant">NOOP</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">modelManagementOptions</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ModelManagementOptions</span><span class="token punctuation">(</span>chatModelPullStrategy<span class="token punctuation">,</span> initProperties<span class="token punctuation">.</span><span class="token function">getChat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAdditionalModels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> initProperties<span class="token punctuation">.</span><span class="token function">getTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> initProperties<span class="token punctuation">.</span><span class="token function">getMaxRetries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>chatModel<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        observationConvention<span class="token punctuation">.</span><span class="token function">ifAvailable</span><span class="token punctuation">(</span>chatModel<span class="token operator">::</span><span class="token function">setObservationConvention</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">        <span class="token keyword">return</span> chatModel<span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span><span class="code-line">
</span></code></pre>
<p>这么一来我们就可以用自己的OllamaAlibabaChatModel类来代替OllamaChatModel使用阿里的qwen3模型了
具体使用方法
serviceChatClient为自己定义的方法，形参中把OllamaChatModel替换为OllamaAlibabaChatModel模型即可。</p>
<pre class="language-java"><code class="language-java code-highlight"><span class="code-line"><span class="token doc-comment comment">/**
</span></span><span class="code-line"><span class="token doc-comment comment">     * 构建模型客户端
</span></span><span class="code-line"><span class="token doc-comment comment">     * <span class="token keyword">@param</span> <span class="token parameter">ollamaChatModel</span> ollama聊天模型
</span></span><span class="code-line"><span class="token doc-comment comment">     * <span class="token keyword">@return</span> ChatClient
</span></span><span class="code-line"><span class="token doc-comment comment">     */</span>
</span><span class="code-line">    <span class="token annotation punctuation">@Bean</span>
</span><span class="code-line">    <span class="token keyword">public</span> <span class="token class-name">ChatClient</span> <span class="token function">serviceChatClient</span><span class="token punctuation">(</span><span class="token class-name">OllamaAlibabaChatModel</span> ollamaChatModel<span class="token punctuation">,</span> <span class="token class-name">ChatMemory</span> chatMemory<span class="token punctuation">,</span> <span class="token class-name">CourseTools</span> courseTools<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token keyword">return</span> <span class="token class-name">ChatClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>ollamaChatModel<span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">defaultSystem</span><span class="token punctuation">(</span><span class="token class-name">SystemConstants</span><span class="token punctuation">.</span><span class="token constant">SERVICE_SYSTEM_PROMPT</span><span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">defaultAdvisors</span><span class="token punctuation">(</span>
</span><span class="code-line">                        <span class="token class-name">SimpleLoggerAdvisor</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 日志</span>
</span><span class="code-line">                        <span class="token class-name">MessageChatMemoryAdvisor</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>chatMemory<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 配置会话记忆 chat-memory advisor</span>
</span><span class="code-line">                <span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">defaultTools</span><span class="token punctuation">(</span>courseTools<span class="token punctuation">)</span>
</span><span class="code-line">                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span></code></pre>
<p>通过以上配置即可解决Cannot invoke "java.time.Duration.plus(java.time.Duration)" because "evalDuration" is null 错误</p>
<p>如果以上解决方法有其他问题可以通过邮件联系我</p>]]></content:encoded>
            <author>zx88cvb@gmail.com (Bi)</author>
            <category>Spring AI</category>
            <category>Java</category>
            <category>后端</category>
            <category>AI</category>
        </item>
        <item>
            <title><![CDATA[Tailwind CSS 实用技巧]]></title>
            <link>localhost:3000/posts/tailwind-css-tips</link>
            <guid isPermaLink="false">localhost:3000/posts/tailwind-css-tips</guid>
            <pubDate>Sat, 12 Jul 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[分享一些 Tailwind CSS 的实用技巧和最佳实践，帮助你更高效地使用这个优秀的 CSS 框架。]]></description>
            <content:encoded><![CDATA[<h1>Tailwind CSS 是一个功能优先的 CSS 框架，这里分享一些实用的技巧。</h1>
<p>Tailwind CSS 是一个功能优先的 CSS 框架，这里分享一些实用的技巧。</p>
<h2>响应式设计</h2>
<p>Tailwind 提供了简洁的响应式设计语法：</p>
<pre class="language-html"><code class="language-html code-highlight"><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>w-full md:w-1/2 lg:w-1/3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">  响应式容器
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span></code></pre>
<h3>断点说明</h3>
<ul>
<li><code>sm</code>: 640px 及以上</li>
<li><code>md</code>: 768px 及以上</li>
<li><code>lg</code>: 1024px 及以上</li>
<li><code>xl</code>: 1280px 及以上</li>
<li><code>2xl</code>: 1536px 及以上</li>
</ul>
<h2>自定义配置</h2>
<h3>扩展颜色</h3>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token comment">// tailwind.config.js</span>
</span><span class="code-line">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</span><span class="code-line">      <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token literal-property property">brand</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</span><span class="code-line">          <span class="token number">50</span><span class="token operator">:</span> <span class="token string">'#eff6ff'</span><span class="token punctuation">,</span>
</span><span class="code-line">          <span class="token number">500</span><span class="token operator">:</span> <span class="token string">'#3b82f6'</span><span class="token punctuation">,</span>
</span><span class="code-line">          <span class="token number">900</span><span class="token operator">:</span> <span class="token string">'#1e3a8a'</span><span class="token punctuation">,</span>
</span><span class="code-line">        <span class="token punctuation">}</span>
</span><span class="code-line">      <span class="token punctuation">}</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">  <span class="token punctuation">}</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<h3>自定义字体</h3>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</span><span class="code-line">      <span class="token literal-property property">fontFamily</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</span><span class="code-line">        <span class="token string-property property">'sans'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'Inter'</span><span class="token punctuation">,</span> <span class="token string">'ui-sans-serif'</span><span class="token punctuation">,</span> <span class="token string">'system-ui'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</span><span class="code-line">        <span class="token string-property property">'mono'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'Fira Code'</span><span class="token punctuation">,</span> <span class="token string">'ui-monospace'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</span><span class="code-line">      <span class="token punctuation">}</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">  <span class="token punctuation">}</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<h2>实用组件</h2>
<h3>卡片组件</h3>
<pre class="language-html"><code class="language-html code-highlight"><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-lg font-semibold text-gray-900 dark:text-white mb-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">    卡片标题
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>h3</span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-gray-600 dark:text-gray-300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">    卡片内容描述
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>p</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span></code></pre>
<h3>按钮组件</h3>
<pre class="language-html"><code class="language-html code-highlight"><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">  点击按钮
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>button</span><span class="token punctuation">></span></span>
</span></code></pre>
<h2>暗色模式</h2>
<p>启用暗色模式：</p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token comment">// tailwind.config.js</span>
</span><span class="code-line">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token literal-property property">darkMode</span><span class="token operator">:</span> <span class="token string">'class'</span><span class="token punctuation">,</span>
</span><span class="code-line">  <span class="token comment">// ...</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<p>使用暗色模式类：</p>
<pre class="language-html"><code class="language-html code-highlight"><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bg-white dark:bg-gray-900 text-gray-900 dark:text-white<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">  支持暗色模式的内容
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span></code></pre>
<h2>性能优化</h2>
<h3>JIT 模式</h3>
<p>Tailwind CSS 3.0+ 默认使用 JIT（Just-In-Time）编译：</p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">'jit'</span><span class="token punctuation">,</span>
</span><span class="code-line">  <span class="token literal-property property">purge</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'./src/**/*.{js,ts,jsx,tsx}'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</span><span class="code-line">  <span class="token comment">// ...</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<h3>移除未使用的样式</h3>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">[</span>
</span><span class="code-line">    <span class="token string">'./src/**/*.{js,ts,jsx,tsx,mdx}'</span><span class="token punctuation">,</span>
</span><span class="code-line">  <span class="token punctuation">]</span><span class="token punctuation">,</span>
</span><span class="code-line">  <span class="token comment">// ...</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<h2>总结</h2>
<p>Tailwind CSS 提供了强大而灵活的工具集，通过这些技巧可以更高效地构建现代化的用户界面。记住要善用文档和配置选项来满足项目需求。</p>]]></content:encoded>
            <author>zx88cvb@gmail.com (Bi)</author>
            <category>Tailwind CSS</category>
            <category>CSS</category>
            <category>前端</category>
            <category>样式</category>
        </item>
        <item>
            <title><![CDATA[Next.js 14 新特性探索]]></title>
            <link>localhost:3000/posts/nextjs-14-features</link>
            <guid isPermaLink="false">localhost:3000/posts/nextjs-14-features</guid>
            <pubDate>Fri, 11 Jul 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[深入了解 Next.js 14 带来的新特性，包括 App Router、Server Components 等重要更新。]]></description>
            <content:encoded><![CDATA[<h1>Next.js 14 带来了许多令人兴奋的新特性</h1>
<p>Next.js 14 带来了许多令人兴奋的新特性，让我们一起来探索这些改进。</p>
<h2>App Router</h2>
<p>App Router 是 Next.js 13 引入的新路由系统，在 14 中得到了进一步完善。</p>
<h3>主要特点</h3>
<ol>
<li><strong>基于文件系统的路由</strong></li>
<li><strong>嵌套布局</strong></li>
<li><strong>并行路由</strong></li>
<li><strong>拦截路由</strong></li>
</ol>
<pre class="language-typescript"><code class="language-typescript code-highlight"><span class="code-line"><span class="token comment">// app/layout.tsx</span>
</span><span class="code-line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">RootLayout</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</span><span class="code-line">  children<span class="token punctuation">,</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
</span><span class="code-line">  children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</span><span class="code-line">    <span class="token operator">&#x3C;</span>html lang<span class="token operator">=</span><span class="token string">"zh-CN"</span><span class="token operator">></span>
</span><span class="code-line">      <span class="token operator">&#x3C;</span>body<span class="token operator">></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&#x3C;</span><span class="token operator">/</span>body<span class="token operator">></span>
</span><span class="code-line">    <span class="token operator">&#x3C;</span><span class="token operator">/</span>html<span class="token operator">></span>
</span><span class="code-line">  <span class="token punctuation">)</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<h2>Server Components</h2>
<p>服务器组件允许在服务器端渲染组件，提供更好的性能。</p>
<h3>优势</h3>
<ul>
<li><strong>减少客户端 JavaScript 包大小</strong></li>
<li><strong>更好的 SEO</strong></li>
<li><strong>更快的首屏加载</strong></li>
</ul>
<pre class="language-tsx"><code class="language-tsx code-highlight"><span class="code-line"><span class="token comment">// 服务器组件示例</span>
</span><span class="code-line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">BlogPost</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token keyword">const</span> post <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchPost</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
</span><span class="code-line">  
</span><span class="code-line">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>article</span><span class="token punctuation">></span></span><span class="token plain-text">
</span></span><span class="code-line"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>post<span class="token punctuation">.</span><span class="token property-access">title</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">
</span></span><span class="code-line"><span class="token plain-text">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>post<span class="token punctuation">.</span><span class="token property-access">content</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">
</span></span><span class="code-line"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>article</span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token punctuation">)</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<h2>性能优化</h2>
<h3>图片优化</h3>
<pre class="language-tsx"><code class="language-tsx code-highlight"><span class="code-line"><span class="token keyword">import</span> <span class="token imports"><span class="token maybe-class-name">Image</span></span> <span class="token keyword">from</span> <span class="token string">'next/image'</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token keyword">function</span> <span class="token function">Avatar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span><span class="token class-name">Image</span></span>
</span></span><span class="code-line"><span class="token tag">      <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/avatar.jpg<span class="token punctuation">"</span></span>
</span></span><span class="code-line"><span class="token tag">      <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>头像<span class="token punctuation">"</span></span>
</span></span><span class="code-line"><span class="token tag">      <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">500</span><span class="token punctuation">}</span></span>
</span></span><span class="code-line"><span class="token tag">      <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">500</span><span class="token punctuation">}</span></span>
</span></span><span class="code-line"><span class="token tag">      <span class="token attr-name">priority</span>
</span></span><span class="code-line"><span class="token tag">    <span class="token punctuation">/></span></span>
</span><span class="code-line">  <span class="token punctuation">)</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<h3>字体优化</h3>
<pre class="language-tsx"><code class="language-tsx code-highlight"><span class="code-line"><span class="token keyword">import</span> <span class="token imports"><span class="token punctuation">{</span> <span class="token maybe-class-name">Inter</span> <span class="token punctuation">}</span></span> <span class="token keyword">from</span> <span class="token string">'next/font/google'</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token keyword">const</span> inter <span class="token operator">=</span> <span class="token function">Inter</span><span class="token punctuation">(</span><span class="token punctuation">{</span> subsets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'latin'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token keyword">return</span> <span class="token punctuation">(</span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>inter<span class="token punctuation">.</span><span class="token property-access">className</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">
</span></span><span class="code-line"><span class="token plain-text">      Hello, Next.js 14!
</span></span><span class="code-line"><span class="token plain-text">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token punctuation">)</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<h2>总结</h2>
<p>Next.js 14 为开发者提供了更强大的工具和更好的开发体验。这些新特性让我们能够构建更快、更好的 Web 应用。</p>]]></content:encoded>
            <author>zx88cvb@gmail.com (Bi)</author>
            <category>Next.js</category>
            <category>React</category>
            <category>前端开发</category>
        </item>
        <item>
            <title><![CDATA[Hello World - 我的第一篇博客]]></title>
            <link>localhost:3000/posts/hello-world</link>
            <guid isPermaLink="false">localhost:3000/posts/hello-world</guid>
            <pubDate>Thu, 10 Jul 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[欢迎来到我的个人博客！这是我的第一篇文章，分享一下建立这个博客的初衷和想法。]]></description>
            <content:encoded><![CDATA[<h1>Hello World</h1>
<p>欢迎来到我的个人博客！这是我用 Next.js 和 Markdown 搭建的第一篇文章。</p>
<h2>为什么要写博客？</h2>
<p>写博客有很多好处：</p>
<ol>
<li><strong>知识分享</strong> - 将学到的知识分享给更多人</li>
<li><strong>思考总结</strong> - 通过写作来整理自己的思路</li>
<li><strong>技术成长</strong> - 记录技术学习的历程</li>
<li><strong>生活感悟</strong> - 分享生活中的点点滴滴</li>
</ol>
<h2>技术栈</h2>
<p>这个博客使用了以下技术：</p>
<ul>
<li><strong>Next.js</strong> - React 框架</li>
<li><strong>Tailwind CSS</strong> - 样式框架</li>
<li><strong>Markdown</strong> - 内容管理</li>
<li><strong>TypeScript</strong> - 类型安全</li>
</ul>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token comment">// 示例代码</span>
</span><span class="code-line"><span class="token keyword">function</span> <span class="token function"><span class="token maybe-class-name">HelloWorld</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token keyword control-flow">return</span> <span class="token operator">&#x3C;</span>h1<span class="token operator">></span><span class="token maybe-class-name">Hello</span><span class="token punctuation">,</span> <span class="token maybe-class-name">World</span><span class="token operator">!</span><span class="token operator">&#x3C;</span><span class="token operator">/</span>h1<span class="token operator">></span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token keyword module">export</span> <span class="token keyword module">default</span> <span class="token maybe-class-name">HelloWorld</span>
</span></code></pre>
<h2>未来规划</h2>
<p>接下来我计划写一些关于：</p>
<ul>
<li>前端技术分享</li>
<li>编程学习心得</li>
<li>生活随想</li>
<li>项目经验总结</li>
</ul>
<p>感谢你的阅读，希望我们能在这里分享更多有趣的内容！</p>]]></content:encoded>
            <author>zx88cvb@gmail.com (Bi)</author>
            <category>博客</category>
            <category>技术</category>
            <category>生活</category>
        </item>
    </channel>
</rss>